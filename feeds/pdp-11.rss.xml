<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>fritzm.github.io - PDP-11</title><link>http://fritzm.github.io/</link><description></description><lastBuildDate>Sun, 25 Jun 2017 00:00:00 -0700</lastBuildDate><item><title>PDP-11/45: RK11 VII</title><link>http://fritzm.github.io/rk11-7.html</link><description>&lt;p&gt;Okay, back from travel and picked up the thread on the RK11 interrupt problem this weekend. Put the KM11 in 
the first slot on the RK11 which allows to monitor interrupt request. An interrupt can be very easily
generated from the front panel by writing bit 6 (Interrupt on Done Enable) on in the RKCS register at 777404.
Did this, and noticed that interrupt request logic on the RK11 went active, but never cleared.&lt;/p&gt;
&lt;p&gt;Checked bus request and grant continuity all the way through to the CPU backplane and back and that looked
fine (the RK11 in its default configuration uses BR5).&lt;/p&gt;
&lt;p&gt;Chased bus request with a logic probe all the way to the CPU backplane, and it was being asserted correctly.
Looking at BG5, however, I noticed it was always asserted, even if BR5 was inactive. Disconnected all
peripherals and terminated the Unibus directly on the CPU backplane, and this was still the case. So there
was problem with BG5 in the CPU itself.&lt;/p&gt;
&lt;p&gt;Threw the CPU UBC card out on extenders, and took a look at BG5 logic with a logic probe.  The 8881 driver
for this signal (E42 on sheet UBCD of the engineering drawings) had failed -- pins 8 and 9 were high, but pin
10, BG5, was not being driven low. Pulled this chip, put in a socket and a replacement, and the BG was then 
working properly.  That's three repairs total to this poor old UBC card so far!  Was able to then verify from 
the front panel that the processor fielded interrupt 220 in response to
setting the IDE bit in RKCS. Progress!&lt;/p&gt;
&lt;p&gt;Back to the MAINDEC ZRKK -- interrupt test now passes, and the diagnostic continues. BUT... error output now
on test octal 57, which is working out the "hardware pole" feature of the controller.  Thought this might
be due to the RK11 being configured for two RK05 drives, but I have restored/connected only the first.
Rejumpered the G740 flipchip for a single drive, but this didn't seem to help.  Hmmm, will need to read the
diagnostic source to see what it is trying to do...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/G740.jpg"&gt;&lt;img src='/images/pdp11/G740_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 25 Jun 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-06-25:/rk11-7.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11 VI - "Pole" and Interrupt Issues</title><link>http://fritzm.github.io/rk11-6.html</link><description>&lt;p&gt;Replaced the failed 7401 in the RKDA to RKDB data path, and verified that the RKDB stuck bit 11 problem was
fixed.  Ran the system for another couple hours to rewrite a fresh RT11 pack, then another problem developed:
read operations would successfully obtain the bus, but would never complete.&lt;/p&gt;
&lt;p&gt;Some investigation with a KM11 on the RK11 controller showed that POLE was now incorrectly asserted 
continuously (did they mean "poll"?). Tracked this down to a failed 7420 (E1 on the M141 at A26, sheet 
RK11-C-12). Replaced, and reads were working again. I guess with a machine this age there is going to be a
lot of this sort of thing where marginal parts give up after a few hours of use.  Hopefully after some 
prolonged operation things will settle down a little bit...&lt;/p&gt;
&lt;p&gt;In any case, &lt;em&gt;still&lt;/em&gt; unable to boot any of my RT11 packs.  I Decided to step back and run MAINDEC diagnostic
ZRKK. This is the RK11 dynamic diagnostic that destructively modifies a pack, and I had not previously run it 
-- I had just optimistically jumped to trying to boot existing packs after the drive restore and calibration.
The diagnostic ran successfully for a while, through various format and read and write tests over the whole
pack (encouraging!), then hung up consistently on test 35 (octal), which tests whether the RK11 interrupts
the processor correctly when IDE is set.&lt;/p&gt;
&lt;p&gt;So it could be the case that my RT11 boots hang up when they first start trying to make use of interrupts. 
Verified that I can run MAINDEC ZKWA, which tests interrupts from the KW11-L line clock, so interrupt 
fielding in the CPU looks good.&lt;/p&gt;
&lt;p&gt;Re-ran MAINDEC ZRKK, and noted that the CPU is waiting in micro-state BRK.00 (154) on page FLOWS 12 of the
engineering drawings. This state has a wait for Unibus INTR to be asserted, so it looks like a problem with
interrupt signaling on the RK11 side.&lt;/p&gt;
&lt;p&gt;I have a bit of travel coming up, so I probably won't get back to this for a week or two. But the next 
sensible step I think will be to work with a logic analyzer on the backplane of the RK11, slot A6 where the
M7820 interrupt control flipchip goes, and see what is/isn't happening with the interrupt signaling on that
end. I suspect there will probably be a failed IC on the M7820.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Thu, 08 Jun 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-06-08:/rk11-6.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11 V - Checksum issues</title><link>http://fritzm.github.io/rk11-5.html</link><description>&lt;p&gt;Decided to use the disk utilities provided in PDP11GUI to write a fresh RT11 pack.  PDP11GUI successfully
assembled and downloaded a driver, then took a little under 2 hours to download the pack image over the
console serial line and write the pack without indicating any errors.&lt;/p&gt;
&lt;p&gt;The resulting pack fared no better at boot than any of my existing legacy packs, however.  I attempted
to verify the pack via PDP11GUI, and noticed that the controller was indicating checksum errors for every
sector on cylinders 64-127 and 192-202 (that is, whenever bit 11 of the RKDA was set).  Tried this on several
other packs, including the RKDP pack which had previously booted, and found that these errors were returned
for these cylinders on &lt;em&gt;all&lt;/em&gt; packs, so definitely a controller or drive issue, and not specific to any 
particular pack.&lt;/p&gt;
&lt;p&gt;Verified that bit 11 of the RKDA could be read and written normally, and that when so addressed the RK05
drive would mechanically seek to the correct cylinders.  Programmed some format-mode reads (these just return
sector headers) manually via the front panel, and verified that the sector headers were being returned 
correctly from disk for the affected cylinders.&lt;/p&gt;
&lt;p&gt;Tried a few flipchip swaps to see if the affected bit would move: B18 and B19 (adder; sheet RK11-C-14; no
change), A21 and B21 (RKDB; sheet RK11-C-10; no change).&lt;/p&gt;
&lt;p&gt;Programmed some all-mode reads (these return preamble, header, data, and postamble) manually via the front
panel.  These showed that during reads of affected cylinders, bit 11 was stuck always on.  When reading
unaffected cylinders, bit 11 turned on and off normally.  So it seemed bit 11 was "leaking" from RKDA to
RKDB.&lt;/p&gt;
&lt;p&gt;Seeing this, tried a few more swaps: A15 and B15 (internal bus, sheet RK11-C-20, no change), A23 and B23
(RKDB data path; sheet RK11-C-21; bingo!).  Stuck bit went away on this last swap.  So it looks like a
failed 7401, E2 on the M149 in slot A23.  Pulled, socketed, and put some 7401 on order at Jameco where I
can pick them up tomorrow on my way in to work.  Getting closer!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 21 May 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-05-21:/rk11-5.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: CPU debug VI - RK11 NPRs and first disk boot!</title><link>http://fritzm.github.io/cpu-debug-6.html</link><description>&lt;p&gt;Took a little of time to sort through BC11 cables to find a good one for drive interfacing, but in the end I
found one that worked okay and got the seek tester code from the previous post working reliably.  At this
point I mounted one of the recently cleaned RK05 packs, but found that the M9301 bootstrap would hang the bus
on the first read operation.&lt;/p&gt;
&lt;p&gt;A little scoping around on the RK11-C showed that it was asserting NPR to the processor, but never receiving
NPG.  A quick check of NPG continuity on the backplane showed a missing jumper on one slot of my DD11-D.
Wrapped this on, verified NPG continuity all the way out to the RK11, but still no joy.  Turns out the CPU
is not asserting NPG at all.&lt;/p&gt;
&lt;p&gt;Threw the CPU UBC card out on extenders and had a go at chasing though the NPG logic with a logic probe.
Turns out to be a failed 8881 bus driver for NPG at the end of the line (E55 on KB11-A drawing UBCD). Pulled,
socketed, replaced.&lt;/p&gt;
&lt;p&gt;After this, the CPU was asserting NPG, but the signaling still looked a little squirrelly.  Turns out that
there are jumpers (W1-W5) on the M9301 bootstrap terminator that need to be installed to provide grant 
pull-ups when they are not otherwise provided internally by the processor (and the 11/45 is one such
case).  After installing the jumpers, NPG signaling looked solid.&lt;/p&gt;
&lt;p&gt;Tried mounting a booting a few packs.  Packs marked as having RT11 would run for a short while and then hang.
But an RKDP pack &lt;em&gt;successfully booted!&lt;/em&gt;  Wow, that feels pretty good after about two years of working
seriously on this restoration.  :-)&lt;/p&gt;
&lt;p&gt;Going to stop here on a high note, and pick up trying to get a good RT11 boot next time.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/rkdp-boot.jpg"&gt;&lt;img src='/images/pdp11/rkdp-boot_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 14 May 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-05-14:/cpu-debug-6.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK05 II - Head Load and Servo Calibration</title><link>http://fritzm.github.io/rk05-2.html</link><description>&lt;p&gt;Okay, disassembled and cleaned a few RK05 cartidges, following advice from the vcfed forum and cctalk
mailing list (cleanroom gloves and wipes, 99% anyhydrous isoprop).  Was surprised to find foam inside
the hub on the disks (see pic below) but folks on vcfed advise that it is high-density polyeurethane
and not subject to decay to the same extent as the other DEC foams, so I left it be.&lt;/p&gt;
&lt;p&gt;Mounted one of the cleaned packs, and let it spin in the drive for a few hours with head load disabled
in order to get a good flush on the air filtration system, let the various bearings on the drive loosen up,
and make sure the replacement head retract batteries got a good charge.  Drive ran quiet and balanced.&lt;/p&gt;
&lt;p&gt;After that, took a deep breath and let the heads load -- no crash!  Proceeded to work through the dynamic
off-line calibration procedure for the head positioning servo system.  This involves jumpering the control
electronics on the drive to strobe simulated cylinder addresses from the sector counter.  That provides
a convenient source of oscillating seeks that can be used to calibrate the servos.  Video here shows head
load, a four cylinder oscillating seek, and a scope trace of the resulting sine position output of the electro-optical carriage position sensor:&lt;/p&gt;
&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="640" height="390"
                    src='https://www.youtube.com/embed/b6p2ri-uM9c?rel=0'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Surprisingly, after about thirty years of non-operation, all of the servo calibration was within specified
error bars, so no adjustments were necessary!  At this point I decided to go for broke, cabled the drive
to the RK11-C controller and attempted a boot.  Some cncouraging front panel indicator activity, but soon
halted with a seek error flagged in RKER.  Not too surprising.&lt;/p&gt;
&lt;p&gt;Okay, on to debugging the drive online with the controller, then. Worked up the following test code, inspired
by something in one of the RK05 SPI workbooks.  This reads two cylinder addresses from the high and low
bytes of the front panel switches, and instructs the controller to instruct the drive to seek alternately
between them:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;177570&lt;/span&gt;                          &lt;span class="nt"&gt;SW&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177570&lt;/span&gt;
        &lt;span class="nt"&gt;177400&lt;/span&gt;                          &lt;span class="nt"&gt;RKDS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177400&lt;/span&gt;
        &lt;span class="nt"&gt;177404&lt;/span&gt;                          &lt;span class="nt"&gt;RKCS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177404&lt;/span&gt;
        &lt;span class="nt"&gt;177412&lt;/span&gt;                          &lt;span class="nt"&gt;RKDA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177412&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;012706&lt;/span&gt;  &lt;span class="nt"&gt;000700&lt;/span&gt;          &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;700&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;SP&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt;
&lt;span class="nt"&gt;001004&lt;/span&gt;  &lt;span class="nt"&gt;013700&lt;/span&gt;  &lt;span class="nt"&gt;177570&lt;/span&gt;          &lt;span class="nt"&gt;L0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;SW&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RETRIEVE&lt;/span&gt; &lt;span class="nt"&gt;SWITCHES&lt;/span&gt;
&lt;span class="nt"&gt;001010&lt;/span&gt;  &lt;span class="nt"&gt;000300&lt;/span&gt;                          &lt;span class="nt"&gt;SWAB&lt;/span&gt;    &lt;span class="nt"&gt;R0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOWER&lt;/span&gt; &lt;span class="nt"&gt;SWITCHES&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;UPPER&lt;/span&gt;
&lt;span class="nt"&gt;001012&lt;/span&gt;  &lt;span class="nt"&gt;004767&lt;/span&gt;  &lt;span class="nt"&gt;000012&lt;/span&gt;                  &lt;span class="nt"&gt;JSR&lt;/span&gt;     &lt;span class="nt"&gt;PC&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;SEEK&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;THE&lt;/span&gt; &lt;span class="nt"&gt;SEEK&lt;/span&gt;
&lt;span class="nt"&gt;001016&lt;/span&gt;  &lt;span class="nt"&gt;013700&lt;/span&gt;  &lt;span class="nt"&gt;177570&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;SW&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RETRIEVE&lt;/span&gt; &lt;span class="nt"&gt;SWITCHES&lt;/span&gt;
&lt;span class="nt"&gt;001022&lt;/span&gt;  &lt;span class="nt"&gt;004767&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;                  &lt;span class="nt"&gt;JSR&lt;/span&gt;     &lt;span class="nt"&gt;PC&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;SEEK&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;THE&lt;/span&gt; &lt;span class="nt"&gt;SEEK&lt;/span&gt;
&lt;span class="nt"&gt;001026&lt;/span&gt;  &lt;span class="nt"&gt;000766&lt;/span&gt;                          &lt;span class="nt"&gt;BR&lt;/span&gt;      &lt;span class="nt"&gt;L0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;START&lt;/span&gt; &lt;span class="nt"&gt;OVER&lt;/span&gt;
&lt;span class="nt"&gt;001030&lt;/span&gt;  &lt;span class="nt"&gt;042700&lt;/span&gt;  &lt;span class="nt"&gt;000377&lt;/span&gt;          &lt;span class="nt"&gt;SEEK&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;377&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;MASK&lt;/span&gt; &lt;span class="nt"&gt;OFF&lt;/span&gt; &lt;span class="nt"&gt;LOWER&lt;/span&gt; &lt;span class="nt"&gt;BYTE&lt;/span&gt;
&lt;span class="nt"&gt;001034&lt;/span&gt;  &lt;span class="nt"&gt;072027&lt;/span&gt;  &lt;span class="nt"&gt;177775&lt;/span&gt;                  &lt;span class="nt"&gt;ASH&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;-3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;OVER&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;CYL&lt;/span&gt; &lt;span class="nt"&gt;ADDRESS&lt;/span&gt;
&lt;span class="nt"&gt;001040&lt;/span&gt;  &lt;span class="nt"&gt;105737&lt;/span&gt;  &lt;span class="nt"&gt;177404&lt;/span&gt;          &lt;span class="nt"&gt;L1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;RKCS&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;RKCS&lt;/span&gt; &lt;span class="nt"&gt;RDY&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt;
&lt;span class="nt"&gt;001044&lt;/span&gt;  &lt;span class="nt"&gt;100375&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="nt"&gt;L1&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;BUSY&lt;/span&gt;
&lt;span class="nt"&gt;001046&lt;/span&gt;  &lt;span class="nt"&gt;032737&lt;/span&gt;  &lt;span class="nt"&gt;000100&lt;/span&gt;  &lt;span class="nt"&gt;177400&lt;/span&gt;  &lt;span class="nt"&gt;L2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;BIT&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;RKDS&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;RKDS&lt;/span&gt; &lt;span class="nt"&gt;ARDY&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt;
&lt;span class="nt"&gt;001054&lt;/span&gt;  &lt;span class="nt"&gt;001774&lt;/span&gt;                          &lt;span class="nt"&gt;BEQ&lt;/span&gt;     &lt;span class="nt"&gt;L2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;BUSY&lt;/span&gt;
&lt;span class="nt"&gt;001056&lt;/span&gt;  &lt;span class="nt"&gt;010037&lt;/span&gt;  &lt;span class="nt"&gt;177412&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;RKDA&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;WRITE&lt;/span&gt; &lt;span class="nt"&gt;SEEK&lt;/span&gt; &lt;span class="nt"&gt;TARGET&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;RKDA&lt;/span&gt;
&lt;span class="nt"&gt;001062&lt;/span&gt;  &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;000011&lt;/span&gt;  &lt;span class="nt"&gt;177404&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;11&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;RKCS&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;WRITE&lt;/span&gt; &lt;span class="nt"&gt;SEEK&lt;/span&gt; &lt;span class="nt"&gt;CMD&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nt"&gt;GO&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;RKCS&lt;/span&gt;
&lt;span class="nt"&gt;001070&lt;/span&gt;  &lt;span class="nt"&gt;000207&lt;/span&gt;                          &lt;span class="nt"&gt;RTS&lt;/span&gt;     &lt;span class="nt"&gt;PC&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RETURN&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;CALLER&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;At first this code was generating no seek activity on the drive.  Decided to try swapping out the BC11-A
drive cable, and that produced some limited success -- drive seeks, but some bits of the cylinder address
are still apparently not making it across the cable.&lt;/p&gt;
&lt;p&gt;The BC11-A cables are problematic.  They seem flaky and fragile, and many of my spares seem bad.  Any given
cable may beep out fine on the bench, and yet fail consistently in use...  It looks like what's up next is a
voyage through my box of spares, swapping in cables looking for one that works reliably.  Failing that, I'll
need work on some sort of modern replacement, since original BC11-A in good shape are getting hard to find.
It will be sad if at the end of this journey I can't boot the machine for mere lack of a good cable between
the drives and controller!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/rk05-cartridge-foam.jpg"&gt;&lt;img src='/images/pdp11/rk05-cartridge-foam_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-running.jpg"&gt;&lt;img src='/images/pdp11/rk05-running_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/BC11-woes.jpg"&gt;&lt;img src='/images/pdp11/BC11-woes_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-04-09:/rk05-2.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11 IV</title><link>http://fritzm.github.io/rk11-4.html</link><description>&lt;p&gt;A quick note: rejumpered a spare M105 address decoder, and swapped it in for the one that was in the RK11.  SSYN waveform is greatly improved (see before/after shots below), so looks like a bad driver on 
the original M105.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/rkcs-fixed.jpg"&gt;&lt;img src='/images/pdp11/rkcs-fixed_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rkcs-really-fixed.jpg"&gt;&lt;img src='/images/pdp11/rkcs-really-fixed_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 01 Apr 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-04-01:/rk11-4.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK05</title><link>http://fritzm.github.io/rk05.html</link><description>&lt;p&gt;Started going through the two RK05 drives.  Lots of work to remove and clean up all the decaying foam.
Replaced the emergency head retract NiCd battery packs on both units.  They were both slightly leaky, but 
luckily neither had made a big mess.&lt;/p&gt;
&lt;p&gt;Air filter elbows are intact on both units, and still slightly flexible, though they do have a white
powdery coating where the material is degenerating.  Cleaned up okay with some warm soapy water and a
toothbrush.  I'm sure these will continue to decompose/decay, however, and in the long term having loose
particulates develop inside the elbow seems a certain recipe for a head crash.  I may explore the possibility
of 3D printing some sort of modern replacement for these.&lt;/p&gt;
&lt;p&gt;Heads on the first unit look to be in decent shape, but some oxide buildup.  In the second unit, the 
carriage was not parked, so the heads were in contact with each other.  They don't look damaged from a
preliminary inspection, but this head pair has considerably more oxide.  Before and after cleaning shots of
the upper and lower heads on the first unit below.&lt;/p&gt;
&lt;p&gt;Pulled the H743 power supplies and reformed the larger electrolytics.  After this, both power supplies 
powered up fine, though the -15V regulator on the first unit was trimmed very hot (-23 or so).  Trimmed this 
down, put the supply back in the first unit and powered up.  Under load, the -15V regulator drooped to -8, 
and a pico fuse on the +15V supply blew immediately.&lt;/p&gt;
&lt;p&gt;Swapped in the -15V regulator from the second supply, which was not trimmed hot, and replaced the blown
pico fuse.  Now under load the supply held without drooping, and the +15V pico did not reblow.  So looks
like a bad -15V regulator.  Put a few 723 regulator ICs on order in advance of debugging this.&lt;/p&gt;
&lt;p&gt;After getting the power supply in the first unit up and going, blower powers on, power indicator lights, and
after about three seconds the door safety relay clunks and load indicator lights. Write protect indicator
toggles with panel switch presses per expectation.  If the cartridge-on switch is depressed manually and the 
load toggle is hit, the spindle motor spins up and runs smoothly.&lt;/p&gt;
&lt;p&gt;There are some significant abrasions on the lower panel of the first unit under both the spindle and spindle
motor axles.  It looks like a spacer button which is intended to hold off the lower panel has decayed; will
need to improvise some sort of replacement.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/rk05.jpg"&gt;&lt;img src='/images/pdp11/rk05_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/h743.jpg"&gt;&lt;img src='/images/pdp11/h743_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-lower-before.jpg"&gt;&lt;img src='/images/pdp11/rk05-lower-before_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-lower-after.jpg"&gt;&lt;img src='/images/pdp11/rk05-lower-after_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-upper-before.jpg"&gt;&lt;img src='/images/pdp11/rk05-upper-before_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-upper-after.jpg"&gt;&lt;img src='/images/pdp11/rk05-upper-after_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/lower-cover-abrasions.jpg"&gt;&lt;img src='/images/pdp11/lower-cover-abrasions_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 19 Mar 2017 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-03-19:/rk05.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11 III</title><link>http://fritzm.github.io/rk11-3.html</link><description>&lt;p&gt;Okay, the M9202 bus jumper arrived, and like the 2-foot BC11 cable, the occasional timeouts go away when this
is installed.  Hantek digital scope also arrived, so I decided to throw it on the backplane for a closer 
look at the SSYN and timeout signals.  The results were pretty interesting.  Here's a capture of an RKCS
access triggering a timeout glitch with the M902.  The yellow trace is BUS A SSYN L (taken from C12J1 on the 
11/45 backplane), and the blue trace is UBCB TIMEOUT (1) H (taken from D12U1):&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/rkcs-timeout.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;What's interesting is that with the M9202 in place, the SSYN waveform shape on RCKS accesses is &lt;strong&gt;not&lt;/strong&gt; 
significantly different -- and the timeout glitch still ocurrs from time to time, but at a reduced amplitude:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/rkcs-glitch.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;If the problem had been one solely of lumped loads on the bus, I would have expected the fix to manifest
as a waveform difference, and for the glitches to have disappeared.  These observations steered me back
toward my original (less plausible?) supposition -- the the 74123 one-shot in the Unibus timeout logic in the
CPU was flaky, and particularly sensitive for some reason to SSYN pulses of 568ns.  Adding some extra bus 
length via a BC11 or the M9202 moves the timing by a nano or two off the troublesome period, and reduces the 
magnitude of the glitches.&lt;/p&gt;
&lt;p&gt;So I went ahead and clipped out the suspect 74123, and put in a socket and a fresh part.  Bingo!  Timeout
glitching was eliminated entirely.  Here's a trace after the 74123 was replaced.  This trace looks different 
because with the timeout glitch fixed, I could no longer use it to trigger the scope -- instead I had to
trigger on the trailing edge of SSYN, so we see both RKCS and non-RKCS bus cycles.  In any case, the timeout
glitching is now gone:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/rkcs-fixed.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;So that's a nice result -- I think the new scope is going to be pretty useful.  The rather extreme sawtooth
on the falling edge of SSYN on RKCS accesses still looks pretty bad to me, even though it is no longer
triggering timeouts.  I might try swapping out the M105 address decoder on the RK11, which generates this
signal, and see if the integrity here is improved.  All for now!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 26 Feb 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-02-26:/rk11-3.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11 II</title><link>http://fritzm.github.io/rk11-2.html</link><description>&lt;p&gt;Okay, moving on with the RK11-C debug, the following bit of test code is modeled after that part of the
ZRKJE0 diagnotic that is trapping out:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;177404&lt;/span&gt;                          &lt;span class="nt"&gt;RKCS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177404&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;012706&lt;/span&gt;  &lt;span class="nt"&gt;000770&lt;/span&gt;          &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;770&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;SP&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt;
&lt;span class="nt"&gt;001004&lt;/span&gt;  &lt;span class="nt"&gt;005000&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="nt"&gt;R0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;BASE&lt;/span&gt;
&lt;span class="nt"&gt;001006&lt;/span&gt;  &lt;span class="nt"&gt;012701&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;DEST&lt;/span&gt;
&lt;span class="nt"&gt;001012&lt;/span&gt;  &lt;span class="nt"&gt;010120&lt;/span&gt;                  &lt;span class="nt"&gt;L1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;R1&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;DEST&lt;/span&gt;
&lt;span class="nt"&gt;001014&lt;/span&gt;  &lt;span class="nt"&gt;005020&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;HALT&lt;/span&gt; &lt;span class="nt"&gt;AT&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;DEST&lt;/span&gt;
&lt;span class="nt"&gt;001016&lt;/span&gt;  &lt;span class="nt"&gt;062701&lt;/span&gt;  &lt;span class="nt"&gt;000004&lt;/span&gt;                  &lt;span class="nt"&gt;ADD&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;UPDATE&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;DEST&lt;/span&gt;
&lt;span class="nt"&gt;001022&lt;/span&gt;  &lt;span class="nt"&gt;020600&lt;/span&gt;                          &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="nt"&gt;SP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ALL&lt;/span&gt; &lt;span class="nt"&gt;TRAPS&lt;/span&gt; &lt;span class="nt"&gt;INITD&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="nt"&gt;001024&lt;/span&gt;  &lt;span class="nt"&gt;001372&lt;/span&gt;                          &lt;span class="nt"&gt;BNE&lt;/span&gt;     &lt;span class="nt"&gt;L1&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;NOT&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;KEEP&lt;/span&gt; &lt;span class="nt"&gt;GOING&lt;/span&gt;
&lt;span class="nt"&gt;001026&lt;/span&gt;  &lt;span class="nt"&gt;005002&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="nt"&gt;R2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;MAIN&lt;/span&gt; &lt;span class="nt"&gt;ITERATION&lt;/span&gt; &lt;span class="nt"&gt;COUNT&lt;/span&gt;
&lt;span class="nt"&gt;001030&lt;/span&gt;  &lt;span class="nt"&gt;005202&lt;/span&gt;                  &lt;span class="nt"&gt;L2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="nt"&gt;R2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INC&lt;/span&gt; &lt;span class="nt"&gt;MAIN&lt;/span&gt; &lt;span class="nt"&gt;ITERATION&lt;/span&gt; &lt;span class="nt"&gt;COUNT&lt;/span&gt;
&lt;span class="nt"&gt;001032&lt;/span&gt;  &lt;span class="nt"&gt;010237&lt;/span&gt;  &lt;span class="nt"&gt;177570&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177570&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;UPDATE&lt;/span&gt; &lt;span class="nt"&gt;DISPLAY&lt;/span&gt; &lt;span class="nt"&gt;REG&lt;/span&gt;
&lt;span class="nt"&gt;001036&lt;/span&gt;  &lt;span class="nt"&gt;012700&lt;/span&gt;  &lt;span class="nt"&gt;177404&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;RKCS&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;GET&lt;/span&gt; &lt;span class="nt"&gt;RKCS&lt;/span&gt; &lt;span class="nt"&gt;ADDRESS&lt;/span&gt;
&lt;span class="nt"&gt;001042&lt;/span&gt;  &lt;span class="nt"&gt;012710&lt;/span&gt;  &lt;span class="nt"&gt;007560&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;7560&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;RESET&lt;/span&gt; &lt;span class="nt"&gt;CTRLR&lt;/span&gt; &lt;span class="nt"&gt;CMD&lt;/span&gt;
&lt;span class="nt"&gt;001046&lt;/span&gt;  &lt;span class="nt"&gt;005210&lt;/span&gt;                          &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;GO&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt;
&lt;span class="nt"&gt;001050&lt;/span&gt;  &lt;span class="nt"&gt;005005&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="nt"&gt;R5&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INIT&lt;/span&gt; &lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;COUNT&lt;/span&gt;
&lt;span class="nt"&gt;001052&lt;/span&gt;  &lt;span class="nt"&gt;105710&lt;/span&gt;                  &lt;span class="nt"&gt;L3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;DONE&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt;
&lt;span class="nt"&gt;001054&lt;/span&gt;  &lt;span class="nt"&gt;100765&lt;/span&gt;                          &lt;span class="nt"&gt;BMI&lt;/span&gt;     &lt;span class="nt"&gt;L2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;NEXT&lt;/span&gt; &lt;span class="nt"&gt;MAIN&lt;/span&gt; &lt;span class="nt"&gt;LOOP&lt;/span&gt;
&lt;span class="nt"&gt;001056&lt;/span&gt;  &lt;span class="nt"&gt;005205&lt;/span&gt;                          &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="nt"&gt;R5&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OTHERWISE&lt;/span&gt; &lt;span class="nt"&gt;INC&lt;/span&gt; &lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;COUNT&lt;/span&gt;
&lt;span class="nt"&gt;001060&lt;/span&gt;  &lt;span class="nt"&gt;001374&lt;/span&gt;                          &lt;span class="nt"&gt;BNE&lt;/span&gt;     &lt;span class="nt"&gt;L3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;NOT&lt;/span&gt; &lt;span class="nt"&gt;EXPIRED&lt;/span&gt; &lt;span class="nt"&gt;GO&lt;/span&gt; &lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;AGAIN&lt;/span&gt;
&lt;span class="nt"&gt;001062&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HALT&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OTHERWISE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;HALT&lt;/span&gt; &lt;span class="nt"&gt;HERE&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Running this code, the error is easily reproduced -- the machine traps on a bus timeout and halts after 
anywhere from a few dozen to a few hundred iterations.  Put the logic analyzer on MSYN and SSYN at the
back M105 address decode module on the RK11-C backplane and set up a trigger for long bus cycles, but
surprisingly this was not triggering even though the processor was taking a trap 4.  Verified that the
trigger itself was working fine by accessing a non-existent memory location from the front panel.  Hmmm...&lt;/p&gt;
&lt;p&gt;Next step then was to move back to the CPU, and throw the UBC card out on extenders to get more visibility
into the trap.  A further surprise here -- the problem went away when the UBC was on the extender!  I was
able to run the test code above for hundreds of thousands of iterations without timeouts, and the original
ZRKJE0 diagnostic ran for over half an hour this way.&lt;/p&gt;
&lt;p&gt;Took the UBC back off the extender, and the problem re-occurred, so apparently not just a bad seat.  Hooked
the logic analyzer up to BUS A MSYN L, BUS A SSYN L, and UBCB TIMEOUT (1) H on the 11/45 backplane.  With
this, I was able to capture lots of traces of the failure mode, which looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/timeout-trace.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;Here a glitch on the timeout signal is clearly visible, even though the MSYN/SSYN interval is well under
the bus timeout.  The interesting thing is that bus cycles that result in a glitch all have a MSYN/SSYN
interval of 568 nanosceconds, to within a nanosecond.  Cycles with a slightly different interval do not
timeout.  This jibes with what I saw with the card extender also.  As a further verification, replaced
the M920 bus jumper I'd been using with a 2-foot BC11, and the problem disappeared again.&lt;/p&gt;
&lt;p&gt;At this point, Don over on the VCFED forum pointed out that the M920 I had been using was discontinued early
on due to negative effects on bus signal integrity, and was replaced with the M9202 (which itself contains 2 
feet of BC11).  The issue with the M920 is apprently that it provides so little separation that the connected
loads appear to the bus overall as a single lumped load.  The M9202 separates the loads on the bus to smear
out reflections and ringing and avoid false triggers.  I have tracked down an M9202 on eBay, and have also
put an inexpensive digital storage scope on order so I can start to investigate signal integrity issues like
this that are not apparent on a logic analyzer.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Mon, 20 Feb 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-02-20:/rk11-2.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: RK11</title><link>http://fritzm.github.io/rk11.html</link><description>&lt;p&gt;Finished up the cleanup and rebuild of the H720E for the RK11-C controller: reformed the big electrolytics
over a couple of days, and swapped out the tantalum filters on the regulator board (one of which had started
to leak) for some replacements.  Tantalums of the correct form and value are crazy expensive, and since these
caps (C11-C17, C23) are banked resevoirs on the regulated rails their exact values are not critical.  Went 
with some aluminum electrolytics instead that worked out to a little more aggregate capacity on each bank.&lt;/p&gt;
&lt;p&gt;My H720E is missing its top cover plate, so there was about 40 years worth of accumulated dust in there -- a
lot to clean up!  I'm not sure if the cover was customarily left off to facilitate cooling of the regulator
board, or if it is just genuinely missing.  Will see if the forums/lists have any wisdom here.  Should not be
hard to fab a replacement if it is really supposed to be there.&lt;/p&gt;
&lt;p&gt;Routed the inter-cabinet power control wiring, racked the RK11, and cabled everything up.  This included
moving the M9301 bootstrap terminator over to slot 0, then rummaging through a box of BC11 bus cables for one
that was both long enough and in decent enough shape to connect the CPU and the RK11.  Some of these bus 
cables had period-correct labeling (see picture below :-))  Got a good tip off the cctalk mailing list
(thanks, Jerry!) to drape the BC11 with a service loop from the top-rear of the CPU rack, thus avoiding any
entanglement with the rack slides while moving the CPU cabinet in and out.&lt;/p&gt;
&lt;p&gt;A 2000pF cap that was flown over the RK11 backplane (+5V to DR BUS DC LO L) had broken free of its pin 
connectors; jury-rigged this with some arduino jumpers I had lying around, until I can track down some
appropriate replacement connectors.&lt;/p&gt;
&lt;p&gt;Good news is that after this the machine still booted the M9301 bootstrap, and was still able to run and
pass diagnostics loaded via PDP11GUI.  So, Unibus still working with the BC11 cable in place and termination
out at the RK11.&lt;/p&gt;
&lt;p&gt;Started in with diagnostic ZRKJE0.BIC, which is the controller-only static test.  This indicated:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;REGISTER NOT CLEARED
  PC   REGADD    RECVD
002560  177416  040000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the RKDB register, implemented two M203 R/S flip-flop modules in slots A21 and B21 (see sheet
RK11-C-10 in the RK11-C engineering drawings).  Swapped these, and the stuck bit moved to the other half of
of the register, so looks like failed gate.  Pulled, socketed, replaced, and diagnostic no longer reports
any stuck bits.  Next diagnostic fail is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;UNEXPECTED TIME OUT AT PC=004300
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is test #21 of the diagnostic, testing controller reset.  Will need to do some reading up on the design
of the controller and the diagnostic source to understand how to troubleshoot it further.  All for now!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/720e-caps.jpg"&gt;&lt;img src='/images/pdp11/720e-caps_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk11-racked.jpg"&gt;&lt;img src='/images/pdp11/rk11-racked_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/bc11-good.jpg"&gt;&lt;img src='/images/pdp11/bc11-good_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk11-back.jpg"&gt;&lt;img src='/images/pdp11/rk11-back_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/m203.jpg"&gt;&lt;img src='/images/pdp11/m203_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 29 Jan 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-01-29:/rk11.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics XIV - CPU, MMU, FPU Complete!</title><link>http://fritzm.github.io/diagnostics-14.html</link><description>&lt;p&gt;Okay, after socketing in the replacement 74H10 and reseating a few boards, the output from the floating 
point diagnostic now looks correct:&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: x-small; font-family: monospace; white-space: pre; display: block; line-height: normal; font-weight: bold;"&gt;................ ................ ................ ................ .........11..... .........11..... .........11..... .........11.....
................ ................ ................ ................ ..........11.... ..........11.... ..........11.... ..........11....
................ ................ ................ ................ ...........11... ...........11... ...........11... ...........11...
................ ................ ................ ................ ............11.. ............11.. ............11.. ............11..
................ ................ ................ ................ .............11. .............11. .............11. .............11.
................ ................ ................ ................ ..............11 ..............11 ..............11 ..............11
................ ................ ................ ................ ...............1 1..............1 1..............1 1..............1
.......111...... ................ ................ ................ ................ 11.............. 11.............. 11..............
.......1111..... ................ ................ ................ ................ .11............. .11............. .11.............
..........11.... ................ ................ ................ ................ ..11............ ..11............ ..11............
...........11... ................ ................ ................ ................ ...11........... ...11........... ...11...........
............11.. ................ ................ ................ ................ ....11.......... ....11.......... ....11..........
.............11. ................ ................ ................ ................ .....11......... .....11......... .....11.........
..............11 ................ ................ ................ ................ ......11........ ......11........ ......11........
...............1 1............... ................ ................ ................ .......11....... .......11....... .......11.......
................ 11.............. ................ ................ ................ ........11...... ........11...... ........11......
................ .11............. ................ ................ ................ .........11..... .........11..... .........11.....
................ ..11............ ................ ................ ................ ..........11.... ..........11.... ..........11....
................ ...11........... ................ ................ ................ ...........11... ...........11... ...........11...
................ ....11.......... ................ ................ ................ ............11.. ............11.. ............11..
................ .....11......... ................ ................ ................ .............11. .............11. .............11.
................ ......11........ ................ ................ ................ ..............11 ..............11 ..............11
................ .......11....... ................ ................ ................ ...............1 1..............1 1..............1
.......111...... ........11...... ................ ................ ................ ................ 11.............. 11..............
.......1111..... .........11..... ................ ................ ................ ................ .11............. .11.............
..........11.... ..........11.... ................ ................ ................ ................ ..11............ ..11............
...........11... ...........11... ................ ................ ................ ................ ...11........... ...11...........
............11.. ............11.. ................ ................ ................ ................ ....11.......... ....11..........
.............11. .............11. ................ ................ ................ ................ .....11......... .....11.........
..............11 ..............11 ................ ................ ................ ................ ......11........ ......11........
...............1 1..............1 1............... ................ ................ ................ .......11....... .......11.......
................ 11.............. 11.............. ................ ................ ................ ........11...... ........11......
................ .11............. .11............. ................ ................ ................ .........11..... .........11.....
................ ..11............ ..11............ ................ ................ ................ ..........11.... ..........11....
................ ...11........... ...11........... ................ ................ ................ ...........11... ...........11...
................ ....11.......... ....11.......... ................ ................ ................ ............11.. ............11..
................ .....11......... .....11......... ................ ................ ................ .............11. .............11.
................ ......11........ ......11........ ................ ................ ................ ..............11 ..............11
................ .......11....... .......11....... ................ ................ ................ ...............1 1..............1
.......111...... ........11...... ........11...... ................ ................ ................ ................ 11..............
.......1111..... .........11..... .........11..... ................ ................ ................ ................ .11.............
..........11.... ..........11.... ..........11.... ................ ................ ................ ................ ..11............
...........11... ...........11... ...........11... ................ ................ ................ ................ ...11...........
............11.. ............11.. ............11.. ................ ................ ................ ................ ....11..........
.............11. .............11. .............11. ................ ................ ................ ................ .....11.........
..............11 ..............11 ..............11 ................ ................ ................ ................ ......11........
...............1 1..............1 1..............1 1............... ................ ................ ................ .......11.......
................ 11.............. 11.............. 11.............. ................ ................ ................ ........11......
................ .11............. .11............. .11............. ................ ................ ................ .........11.....
................ ..11............ ..11............ ..11............ ................ ................ ................ ..........11....
................ ...11........... ...11........... ...11........... ................ ................ ................ ...........11...
................ ....11.......... ....11.......... ....11.......... ................ ................ ................ ............11..
................ .....11......... .....11......... .....11......... ................ ................ ................ .............11.
................ ......11........ ......11........ ......11........ ................ ................ ................ ..............11
................ .......11....... .......11....... .......11....... ................ ................ ................ ...............1
.......111...... ........11...... ........11...... ........11...... ................ ................ ................ ................
.......1111..... .........11..... .........11..... .........11..... ................ ................ ................ ................
.........11..... .........11..... .........11..... .........11..... ................ ................ ................ ................&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;With this fix, &lt;strong&gt;the machine is now reliably passing the complete suite of CPU, MMU, and FPU diagnostics&lt;/strong&gt; 
-- a real milestone!  I also loaded paper tape BASIC via PDP11GUI, swapped the console over to my VT100, and
played around for a little bit.  Working well, and gratifying to see the machine actually running some
software other than diagnostics.&lt;/p&gt;
&lt;p&gt;So, now, on to the RK11/RK05 storage subsystem for real.  I retrieved the rest of the cabinetry,
cleaned and reassembled it, and inspected and cleaned the cabinet-top 860 power controller in the second
cabinet.  This had the usual dead neon indicator and a blown fuse, but was otherwise in good shape.  At first
I was puzzled by the relay in the 860 not engaging, but after looking at the schematic is was clear that a
jumper plug on J4 connecting pins 1 and 2 was required.  I recalled seeing one such banging around loose
in my spare parts box -- so that's where that came from!  Cleaned up the cabinet-top fan in the second
cabinet as well.&lt;/p&gt;
&lt;p&gt;I have been running the machine off a GFCI quad box behind my washer/dryer, but at this point there is enough
leakage through filter caps in the various power supplies that the GFCI has started to trip from time to time.
Took a pause to rewire the box -- left two of the outlets GFCI protected for the washer/dryer, and rewired two
as non-protected for use with the PDP-11.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/cabinets.jpg"&gt;&lt;img src='/images/pdp11/cabinets_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/basic.jpg"&gt;&lt;img src='/images/pdp11/basic_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Mon, 16 Jan 2017 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2017-01-16:/diagnostics-14.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics XIII - FP11 FPU, cont.</title><link>http://fritzm.github.io/diagnostics-13.html</link><description>&lt;p&gt;Have been looking into the FP11 MOD problem in spare moments of the past few weeks, but haven't written up
an account of the progress, so this will be a bit of a catch-up article.&lt;/p&gt;
&lt;p&gt;Having now studied the design of this thing in more depth, there are a few things I find interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The inner loops of the multiplication, division, and floating-point normalization algorithms on the FP11
are not implemented in microcode, but rather as "hardware subroutines".  Microcode does all the setup of
the various internal registers and counters, then pauses while the hardware runs the inner loop, then picks up
again to mediate rounding, masking, exceptions, etc. afterward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The multiplication implementation uses an interesting algorithm called "skipping over ones and zeros",
described in section 5.3.1 of the FP11 maintenance manual.  This reduces the number of time-consuming
additions needed on average.  It works along the lines of a familiar mental shortcut: suppose you had to
multiply some number X by 999.  Rather than multiply X by 9 three times and shift and add them all up, you
would probably just take X * 1,000 and subtract off X * 1.  The key observation is that you can do this
for any contiguous string of 9s in the multiplier: subtract the multiplicand from the partial product at
the place value where the string begins, then add the multiplicand at one past place value where the string
ends.  The FP11 implements the binary equivalent of this with a small state machine (comprised of flip-flops
MR1, MR0, and STRG1) which identifies strings of contiguous 1s and invokes ALU subtractions and additions on
the boundaries as the multiplier is shifted through.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Debugging techniques: a KM11 in single-clock-transition mode may be used to step within the hardware
subroutines, as they are driven off the main FP11 clock.  It can be a lot of switch presses to step through
an entire multiply (120 or so clock transitions at least for a double-precision multiply, and typically
more because each necessary intermediate add/subtract adds eight clock transitions!) and this gets to be
pretty tedious and error-prone.  A logic analyzer is very useful here to capture a visualization of an entire
multiplication at one go, and enable counting off clock transitions needed to get to something you'd
like to take a closer look at with a logic probe.  Alternatively, if your FP11 is working well enough to
run maintenance instructions, there are software techniques that can prematurely terminate the hardware
subroutines and also give some useful visibility into the intermediate states.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I opted to try out the software techniques to see if I could get more information on the (mis)behavior in
my FP11 order to focus my hardware troubleshooting.  The following program came in handy.  This is based off
some example code in the FP11 maintenance manual, though I elaborated it slightly with a binary printout
routine:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
        &lt;span class="nt"&gt;000001&lt;/span&gt;                          &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
        &lt;span class="nt"&gt;000002&lt;/span&gt;                          &lt;span class="nt"&gt;AC2&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;
        &lt;span class="nt"&gt;177560&lt;/span&gt;                          &lt;span class="nt"&gt;SERIAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;177560&lt;/span&gt;
        &lt;span class="nt"&gt;170006&lt;/span&gt;                          &lt;span class="nt"&gt;MRS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nt"&gt;170006&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;170127&lt;/span&gt;  &lt;span class="nt"&gt;040220&lt;/span&gt;          &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;LDFPS&lt;/span&gt;   &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;40220&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DISABLE&lt;/span&gt; &lt;span class="nt"&gt;INTS&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;DBL&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;MAINT&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;001004&lt;/span&gt;  &lt;span class="nt"&gt;172667&lt;/span&gt;  &lt;span class="nt"&gt;000316&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;MLYR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC2&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;MULTIPLIER&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;AC2&lt;/span&gt;
&lt;span class="nt"&gt;001010&lt;/span&gt;  &lt;span class="nt"&gt;012703&lt;/span&gt;  &lt;span class="nt"&gt;000230&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;230&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt; &lt;span class="nt"&gt;GETS&lt;/span&gt; &lt;span class="nt"&gt;OCTAL&lt;/span&gt; &lt;span class="nt"&gt;230&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;FRAC&lt;/span&gt; &lt;span class="nt"&gt;MUL&lt;/span&gt; &lt;span class="nt"&gt;MICROSTATE&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;001014&lt;/span&gt;  &lt;span class="nt"&gt;170003&lt;/span&gt;                          &lt;span class="nt"&gt;LDUB&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;R3&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;MBR&lt;/span&gt;
&lt;span class="nt"&gt;001016&lt;/span&gt;  &lt;span class="nt"&gt;012702&lt;/span&gt;  &lt;span class="nt"&gt;177564&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;SERIAL&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SERIAL&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;BASE&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;R2&lt;/span&gt;
&lt;span class="nt"&gt;001022&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000015&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;15&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\R&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001030&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                          &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001032&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001034&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000012&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;12&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\N&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001042&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                          &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001044&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001046&lt;/span&gt;  &lt;span class="nt"&gt;005004&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="nt"&gt;R4&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;R4&lt;/span&gt; &lt;span class="nt"&gt;HOLDS&lt;/span&gt; &lt;span class="nt"&gt;SC&lt;/span&gt; &lt;span class="nt"&gt;VALUE&lt;/span&gt;
&lt;span class="nt"&gt;001050&lt;/span&gt;  &lt;span class="nt"&gt;005204&lt;/span&gt;                  &lt;span class="nt"&gt;NXTMUL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="nt"&gt;R4&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INCREMENT&lt;/span&gt; &lt;span class="nt"&gt;SC&lt;/span&gt;
&lt;span class="nt"&gt;001052&lt;/span&gt;  &lt;span class="nt"&gt;170004&lt;/span&gt;                          &lt;span class="nt"&gt;LDSC&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;1S&lt;/span&gt; &lt;span class="nt"&gt;COMPLEMENT&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;R4&lt;/span&gt; &lt;span class="nt"&gt;INTO&lt;/span&gt; &lt;span class="nt"&gt;SC&lt;/span&gt;
&lt;span class="nt"&gt;001054&lt;/span&gt;  &lt;span class="nt"&gt;012705&lt;/span&gt;  &lt;span class="nt"&gt;001356&lt;/span&gt;          &lt;span class="nt"&gt;LSTMUL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;QR&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;R5&lt;/span&gt; &lt;span class="nt"&gt;PAST&lt;/span&gt; &lt;span class="nt"&gt;END&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;STORAGE&lt;/span&gt; &lt;span class="nt"&gt;TABLE&lt;/span&gt;
&lt;span class="nt"&gt;001060&lt;/span&gt;  &lt;span class="nt"&gt;172567&lt;/span&gt;  &lt;span class="nt"&gt;000232&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;MCND&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC1&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;MULTIPLICAND&lt;/span&gt; &lt;span class="nt"&gt;INTO&lt;/span&gt; &lt;span class="nt"&gt;AC1&lt;/span&gt;
&lt;span class="nt"&gt;001064&lt;/span&gt;  &lt;span class="nt"&gt;171102&lt;/span&gt;                          &lt;span class="nt"&gt;MULD&lt;/span&gt;    &lt;span class="nt"&gt;AC2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC1&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;PARTIAL&lt;/span&gt; &lt;span class="nt"&gt;MULTIPLY&lt;/span&gt;
&lt;span class="nt"&gt;001066&lt;/span&gt;  &lt;span class="nt"&gt;170007&lt;/span&gt;                          &lt;span class="nt"&gt;STQ0&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TRANSFER&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;AC0&lt;/span&gt;
&lt;span class="nt"&gt;001070&lt;/span&gt;  &lt;span class="nt"&gt;174045&lt;/span&gt;                          &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TABLE&lt;/span&gt;
&lt;span class="nt"&gt;001072&lt;/span&gt;  &lt;span class="nt"&gt;042715&lt;/span&gt;  &lt;span class="nt"&gt;177600&lt;/span&gt;                  &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177600&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;OFF&lt;/span&gt; &lt;span class="nt"&gt;SIGN&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;EXPONENT&lt;/span&gt;
&lt;span class="nt"&gt;001076&lt;/span&gt;  &lt;span class="nt"&gt;170005&lt;/span&gt;                          &lt;span class="nt"&gt;STA0&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TRANSFER&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;AC0&lt;/span&gt;
&lt;span class="nt"&gt;001100&lt;/span&gt;  &lt;span class="nt"&gt;174045&lt;/span&gt;                          &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TABLE&lt;/span&gt;
&lt;span class="nt"&gt;001102&lt;/span&gt;  &lt;span class="nt"&gt;042715&lt;/span&gt;  &lt;span class="nt"&gt;177600&lt;/span&gt;                  &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177600&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;OFF&lt;/span&gt; &lt;span class="nt"&gt;SIGN&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;EXPONENT&lt;/span&gt;
&lt;span class="nt"&gt;001106&lt;/span&gt;  &lt;span class="nt"&gt;170006&lt;/span&gt;                          &lt;span class="nt"&gt;MRS&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;RIGHT&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt;
&lt;span class="nt"&gt;001110&lt;/span&gt;  &lt;span class="nt"&gt;170006&lt;/span&gt;                          &lt;span class="nt"&gt;MRS&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;RIGHT&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt;
&lt;span class="nt"&gt;001112&lt;/span&gt;  &lt;span class="nt"&gt;170007&lt;/span&gt;                          &lt;span class="nt"&gt;STQ0&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TRANSFER&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;AC0&lt;/span&gt;
&lt;span class="nt"&gt;001114&lt;/span&gt;  &lt;span class="nt"&gt;174067&lt;/span&gt;  &lt;span class="nt"&gt;000236&lt;/span&gt;                  &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;TEMP&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TEMP&lt;/span&gt;
&lt;span class="nt"&gt;001120&lt;/span&gt;  &lt;span class="nt"&gt;016703&lt;/span&gt;  &lt;span class="nt"&gt;000232&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;MSW&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;R3&lt;/span&gt;
&lt;span class="nt"&gt;001124&lt;/span&gt;  &lt;span class="nt"&gt;042703&lt;/span&gt;  &lt;span class="nt"&gt;177600&lt;/span&gt;                  &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;OFF&lt;/span&gt; &lt;span class="nt"&gt;SIGN&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;EXPONENT&lt;/span&gt;
&lt;span class="nt"&gt;001130&lt;/span&gt;  &lt;span class="nt"&gt;006303&lt;/span&gt;                          &lt;span class="nt"&gt;ASL&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;MSBS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt; &lt;span class="nt"&gt;LEFT&lt;/span&gt;
&lt;span class="nt"&gt;001132&lt;/span&gt;  &lt;span class="nt"&gt;006303&lt;/span&gt;                          &lt;span class="nt"&gt;ASL&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;MSBS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;QR&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt; &lt;span class="nt"&gt;LEFT&lt;/span&gt;
&lt;span class="nt"&gt;001134&lt;/span&gt;  &lt;span class="nt"&gt;050365&lt;/span&gt;  &lt;span class="nt"&gt;000010&lt;/span&gt;                  &lt;span class="nt"&gt;BIS&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;10&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;QR59&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;QR58&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TABLE&lt;/span&gt;
&lt;span class="nt"&gt;001140&lt;/span&gt;  &lt;span class="nt"&gt;170005&lt;/span&gt;                          &lt;span class="nt"&gt;STA0&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TRANSFER&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;AC0&lt;/span&gt;
&lt;span class="nt"&gt;001142&lt;/span&gt;  &lt;span class="nt"&gt;174067&lt;/span&gt;  &lt;span class="nt"&gt;000210&lt;/span&gt;                  &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;TEMP&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TEMP&lt;/span&gt;
&lt;span class="nt"&gt;001146&lt;/span&gt;  &lt;span class="nt"&gt;016703&lt;/span&gt;  &lt;span class="nt"&gt;000204&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;MSW&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;R3&lt;/span&gt;
&lt;span class="nt"&gt;001152&lt;/span&gt;  &lt;span class="nt"&gt;042703&lt;/span&gt;  &lt;span class="nt"&gt;177600&lt;/span&gt;                  &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177600&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;OFF&lt;/span&gt; &lt;span class="nt"&gt;SIGN&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;EXPONENT&lt;/span&gt;
&lt;span class="nt"&gt;001156&lt;/span&gt;  &lt;span class="nt"&gt;006303&lt;/span&gt;                          &lt;span class="nt"&gt;ASL&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;MSBS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt; &lt;span class="nt"&gt;LEFT&lt;/span&gt;
&lt;span class="nt"&gt;001160&lt;/span&gt;  &lt;span class="nt"&gt;006303&lt;/span&gt;                          &lt;span class="nt"&gt;ASL&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;MSBS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;AR&lt;/span&gt; &lt;span class="nt"&gt;ONE&lt;/span&gt; &lt;span class="nt"&gt;PLACE&lt;/span&gt; &lt;span class="nt"&gt;LEFT&lt;/span&gt;
&lt;span class="nt"&gt;001162&lt;/span&gt;  &lt;span class="nt"&gt;050315&lt;/span&gt;                          &lt;span class="nt"&gt;BIS&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;AR59&lt;/span&gt; &lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;AR58&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TABLE&lt;/span&gt;
&lt;span class="nt"&gt;001164&lt;/span&gt;  &lt;span class="nt"&gt;012705&lt;/span&gt;  &lt;span class="nt"&gt;001336&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;AR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;GET&lt;/span&gt; &lt;span class="nt"&gt;ADDRESS&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;FIRST&lt;/span&gt; &lt;span class="nt"&gt;QUAD&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;PRINTING&lt;/span&gt;
&lt;span class="nt"&gt;001170&lt;/span&gt;  &lt;span class="nt"&gt;012700&lt;/span&gt;  &lt;span class="nt"&gt;000010&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;10&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt; &lt;span class="nt"&gt;COUNTS&lt;/span&gt; &lt;span class="nt"&gt;8&lt;/span&gt; &lt;span class="nt"&gt;WORDS&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;TWO&lt;/span&gt; &lt;span class="nt"&gt;QUADS&lt;/span&gt;
&lt;span class="nt"&gt;001174&lt;/span&gt;  &lt;span class="nt"&gt;012503&lt;/span&gt;                  &lt;span class="nt"&gt;LWORD&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R5&lt;/span&gt;&lt;span class="o"&gt;)+,&lt;/span&gt;&lt;span class="nt"&gt;R3&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;NEXT&lt;/span&gt; &lt;span class="nt"&gt;WORD&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;QUAD&lt;/span&gt;
&lt;span class="nt"&gt;001176&lt;/span&gt;  &lt;span class="nt"&gt;012701&lt;/span&gt;  &lt;span class="nt"&gt;000020&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;20&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt; &lt;span class="nt"&gt;COUNTS&lt;/span&gt; &lt;span class="nt"&gt;16&lt;/span&gt; &lt;span class="nt"&gt;BITS&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;WORD&lt;/span&gt;
&lt;span class="nt"&gt;001202&lt;/span&gt;  &lt;span class="nt"&gt;006103&lt;/span&gt;                  &lt;span class="nt"&gt;LBIT&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="nt"&gt;ROL&lt;/span&gt;     &lt;span class="nt"&gt;R3&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ROTATE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;HIGH&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;GOES&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;CARRY&lt;/span&gt;
&lt;span class="nt"&gt;001204&lt;/span&gt;  &lt;span class="nt"&gt;103405&lt;/span&gt;                          &lt;span class="nt"&gt;BCS&lt;/span&gt;     &lt;span class="nt"&gt;LBIT1&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SKIP&lt;/span&gt; &lt;span class="nt"&gt;AHEAD&lt;/span&gt; &lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;CARRY&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt;
&lt;span class="nt"&gt;001206&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000056&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;56&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OTHERWISE&lt;/span&gt; &lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001214&lt;/span&gt;  &lt;span class="nt"&gt;000167&lt;/span&gt;  &lt;span class="nt"&gt;000006&lt;/span&gt;                  &lt;span class="nt"&gt;JMP&lt;/span&gt;     &lt;span class="nt"&gt;LBIT2&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;SKIP&lt;/span&gt; &lt;span class="nt"&gt;AHEAD&lt;/span&gt;
&lt;span class="nt"&gt;001220&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000061&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;  &lt;span class="nt"&gt;LBIT1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;61&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001226&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                  &lt;span class="nt"&gt;LBIT2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001230&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001232&lt;/span&gt;  &lt;span class="nt"&gt;077115&lt;/span&gt;                          &lt;span class="nt"&gt;SOB&lt;/span&gt;     &lt;span class="nt"&gt;R1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;LBIT&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;OVER&lt;/span&gt; &lt;span class="nt"&gt;BITS&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;WORD&lt;/span&gt;
&lt;span class="nt"&gt;001234&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000040&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;40&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;SEPARATE&lt;/span&gt; &lt;span class="nt"&gt;WORDS&lt;/span&gt;
&lt;span class="nt"&gt;001242&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                          &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001244&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001246&lt;/span&gt;  &lt;span class="nt"&gt;077026&lt;/span&gt;                          &lt;span class="nt"&gt;SOB&lt;/span&gt;     &lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;LWORD&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;OVER&lt;/span&gt; &lt;span class="nt"&gt;WORDS&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;QUAD&lt;/span&gt;
&lt;span class="nt"&gt;001250&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000015&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;15&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\R&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001256&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                          &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001260&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001262&lt;/span&gt;  &lt;span class="nt"&gt;012762&lt;/span&gt;  &lt;span class="nt"&gt;000012&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;12&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;OUTPUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;\N&amp;#39;&lt;/span&gt;
&lt;span class="nt"&gt;001270&lt;/span&gt;  &lt;span class="nt"&gt;105712&lt;/span&gt;                          &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;            &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt;
&lt;span class="nt"&gt;001272&lt;/span&gt;  &lt;span class="nt"&gt;100376&lt;/span&gt;                          &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt;
&lt;span class="nt"&gt;001274&lt;/span&gt;  &lt;span class="nt"&gt;020427&lt;/span&gt;  &lt;span class="nt"&gt;000071&lt;/span&gt;                  &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="nt"&gt;R4&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;71&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;PASSES&lt;/span&gt; &lt;span class="nt"&gt;AGAINST&lt;/span&gt; &lt;span class="nt"&gt;57&lt;/span&gt;
&lt;span class="nt"&gt;001300&lt;/span&gt;  &lt;span class="nt"&gt;100663&lt;/span&gt;                          &lt;span class="nt"&gt;BMI&lt;/span&gt;     &lt;span class="nt"&gt;NXTMUL&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LESS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;NEXT&lt;/span&gt; &lt;span class="nt"&gt;PASS&lt;/span&gt;
&lt;span class="nt"&gt;001302&lt;/span&gt;  &lt;span class="nt"&gt;001402&lt;/span&gt;                          &lt;span class="nt"&gt;BEQ&lt;/span&gt;     &lt;span class="nt"&gt;LSTPAS&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;EQUAL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;LAST&lt;/span&gt; &lt;span class="nt"&gt;PASS&lt;/span&gt;
&lt;span class="nt"&gt;001304&lt;/span&gt;  &lt;span class="nt"&gt;000167&lt;/span&gt;  &lt;span class="nt"&gt;171470&lt;/span&gt;                  &lt;span class="nt"&gt;JMP&lt;/span&gt;     &lt;span class="nt"&gt;173000&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;GREATER&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;RETURN&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;M9301&lt;/span&gt; &lt;span class="nt"&gt;MONITOR&lt;/span&gt;
&lt;span class="nt"&gt;001310&lt;/span&gt;  &lt;span class="nt"&gt;005204&lt;/span&gt;                  &lt;span class="nt"&gt;LSTPAS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="nt"&gt;R4&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INDICATE&lt;/span&gt; &lt;span class="nt"&gt;58TH&lt;/span&gt; &lt;span class="nt"&gt;PASS&lt;/span&gt;
&lt;span class="nt"&gt;001312&lt;/span&gt;  &lt;span class="nt"&gt;000167&lt;/span&gt;  &lt;span class="nt"&gt;177536&lt;/span&gt;                  &lt;span class="nt"&gt;JMP&lt;/span&gt;     &lt;span class="nt"&gt;LSTMUL&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;LAST&lt;/span&gt; &lt;span class="nt"&gt;PASS&lt;/span&gt; &lt;span class="nt"&gt;WITHOUT&lt;/span&gt; &lt;span class="nt"&gt;LOADING&lt;/span&gt; &lt;span class="nt"&gt;SC&lt;/span&gt;
&lt;span class="nt"&gt;001316&lt;/span&gt;  &lt;span class="nt"&gt;040200&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;MCND&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001324&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001326&lt;/span&gt;  &lt;span class="nt"&gt;040300&lt;/span&gt;  &lt;span class="nt"&gt;000300&lt;/span&gt;  &lt;span class="nt"&gt;000300&lt;/span&gt;  &lt;span class="nt"&gt;MLYR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;000300&lt;/span&gt;
&lt;span class="nt"&gt;001334&lt;/span&gt;  &lt;span class="nt"&gt;000300&lt;/span&gt;
&lt;span class="nt"&gt;001336&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;AR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLT4&lt;/span&gt;   &lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;001344&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001346&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;QR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLT4&lt;/span&gt;   &lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;001354&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001356&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;FLT4&lt;/span&gt;   &lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;001364&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The idea here is to use the LDUB (load micro-break) and LDSC (load step-counter) maintenance instructions to
cause a multiplication to halt partway through.  STA0 and STQ0 (store AR, store QR) instructions, in
conjunction with the MRS (maintenance right shift) instruction, allow retrieval of the internal fraction
registers which are then printed out to the serial console.  This is done repetitively, stopping each time
one step further on, so the progression of the internal states of AR and QR over the course of the entire
multiply may be observed.&lt;/p&gt;
&lt;p&gt;A quick aside here on tooling: since I don't currently have any storage or an OS running on my PDP-11, I load
and execute diagnostics with PDP11GUI to an M9301 boot monitor over a serial connection.  This requires
program binaries in LDA (absolute loader) format.  For non-trivial MACRO-11 programs I have found it most
convenient to use the actual vintage toolchain under RT11 in the simh simulator, because the assembler and
linker provided with PDP11GUI have some limitations.  I copy files in and out via the simulated paper tape
reader/punch.  This is also how I produce the MACRO-11 listings seen on this blog.&lt;/p&gt;
&lt;p&gt;Okay, back to the program above, running this on my machine very clearly illustrates the malfunction.  Here's
what the output looks like:&lt;/p&gt;
&lt;p&gt;&lt;span style="font-size: x-small; font-family: monospace; white-space: pre; display: block; line-height: normal; font-weight: bold;"&gt;................ ................ ................ ................ .........11..... .........11..... .........11..... .........11.....
................ ................ ................ ................ ..........11.... ..........11.... ..........11.... ..........11....
................ ................ ................ ................ ...........11... ...........11... ...........11... ...........11...
................ ................ ................ ................ ............11.. ............11.. ............11.. ............11..
................ ................ ................ ................ .............11. .............11. .............11. .............11.
................ ................ ................ ................ ..............11 ..............11 ..............11 ..............11
................ ................ ................ ................ ...............1 1..............1 1..............1 1..............1
.......11.111111 1111111111111111 1111111111111111 1111111111111111 ................ 11.............. 11.............. 11..............
.......111.11111 1111111111111111 1111111111111111 1111111111111111 ................ .11............. .11............. .11.............
..........1.1111 1111111111111111 1111111111111111 1111111111111111 ................ ..11............ ..11............ ..11............
...........1.111 1111111111111111 1111111111111111 1111111111111111 ................ ...11........... ...11........... ...11...........
............1.11 1111111111111111 1111111111111111 1111111111111111 ................ ....11.......... ....11.......... ....11..........
.............1.1 1111111111111111 1111111111111111 1111111111111111 ................ .....11......... .....11......... .....11.........
..............1. 1111111111111111 1111111111111111 1111111111111111 ................ ......11........ ......11........ ......11........
...............1 .111111111111111 1111111111111111 1111111111111111 ................ .......11....... .......11....... .......11.......
................ 1.11111111111111 1111111111111111 1111111111111111 ................ ........11...... ........11...... ........11......
................ .1.1111111111111 1111111111111111 1111111111111111 ................ .........11..... .........11..... .........11.....
................ ..1.111111111111 1111111111111111 1111111111111111 ................ ..........11.... ..........11.... ..........11....
................ ...1.11111111111 1111111111111111 1111111111111111 ................ ...........11... ...........11... ...........11...
................ ....1.1111111111 1111111111111111 1111111111111111 ................ ............11.. ............11.. ............11..
................ .....1.111111111 1111111111111111 1111111111111111 ................ .............11. .............11. .............11.
................ ......1.11111111 1111111111111111 1111111111111111 ................ ..............11 ..............11 ..............11
................ .......1.1111111 1111111111111111 1111111111111111 ................ ...............1 1..............1 1..............1
.......111...... ........1.111111 1111111111111111 1111111111111111 ................ ................ 11.............. 11..............
.......1111..... .........1.11111 1111111111111111 1111111111111111 ................ ................ .11............. .11.............
..........11.... ..........1.1111 1111111111111111 1111111111111111 ................ ................ ..11............ ..11............
...........11... ...........1.111 1111111111111111 1111111111111111 ................ ................ ...11........... ...11...........
............11.. ............1.11 1111111111111111 1111111111111111 ................ ................ ....11.......... ....11..........
.............11. .............1.1 1111111111111111 1111111111111111 ................ ................ .....11......... .....11.........
..............11 ..............1. 1111111111111111 1111111111111111 ................ ................ ......11........ ......11........
...............1 1..............1 .111111111111111 1111111111111111 ................ ................ .......11....... .......11.......
................ 11.............. 1.11111111111111 1111111111111111 ................ ................ ........11...... ........11......
................ .11............. .1.1111111111111 1111111111111111 ................ ................ .........11..... .........11.....
................ ..11............ ..1.111111111111 1111111111111111 ................ ................ ..........11.... ..........11....
................ ...11........... ...1.11111111111 1111111111111111 ................ ................ ...........11... ...........11...
................ ....11.......... ....1.1111111111 1111111111111111 ................ ................ ............11.. ............11..
................ .....11......... .....1.111111111 1111111111111111 ................ ................ .............11. .............11.
................ ......11........ ......1.11111111 1111111111111111 ................ ................ ..............11 ..............11
................ .......11....... .......1.1111111 1111111111111111 ................ ................ ...............1 1..............1
.......111...... ........11...... ........1.111111 1111111111111111 ................ ................ ................ 11..............
.......1111..... .........11..... .........1.11111 1111111111111111 ................ ................ ................ .11.............
..........11.... ..........11.... ..........1.1111 1111111111111111 ................ ................ ................ ..11............
...........11... ...........11... ...........1.111 1111111111111111 ................ ................ ................ ...11...........
............11.. ............11.. ............1.11 1111111111111111 ................ ................ ................ ....11..........
.............11. .............11. .............1.1 1111111111111111 ................ ................ ................ .....11.........
..............11 ..............11 ..............1. 1111111111111111 ................ ................ ................ ......11........
...............1 1..............1 1..............1 .111111111111111 ................ ................ ................ .......11.......
................ 11.............. 11.............. 1.11111111111111 ................ ................ ................ ........11......
................ .11............. .11............. .1.1111111111111 ................ ................ ................ .........11.....
................ ..11............ ..11............ ..1.111111111111 ................ ................ ................ ..........11....
................ ...11........... ...11........... ...1.11111111111 ................ ................ ................ ...........11...
................ ....11.......... ....11.......... ....1.1111111111 ................ ................ ................ ............11..
................ .....11......... .....11......... .....1.111111111 ................ ................ ................ .............11.
................ ......11........ ......11........ ......1.11111111 ................ ................ ................ ..............11
................ .......11....... .......11....... .......1.1111111 ................ ................ ................ ...............1
.......111...... ........11...... ........11...... ........1.111111 ................ ................ ................ ................
.......1111..... .........11..... .........11..... .........1.11111 ................ ................ ................ ................
.........11..... .........11..... .........11..... .........1.11111 ................ ................ ................ ................&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The left half of the output above shows the contents of AR throughout the progress of the multiply, and the
right half shows the contents of QR.  The most significant 57 bits of each are shown, right justified in a
64-bit field.&lt;/p&gt;
&lt;p&gt;In the FP11, as the multiplication proceeds, the multiplicand is held constant, while the multiplier (in QR)
and partial product (in AR) are successively right shifted.  The bits of the multiplier involved in the
skip-over-ones-and-zeros sate macheine are QR3 and QR2.  QR3 is the rightmost bit shown above.  QR2, to its
right, is not retrievable by software and thus not shown.&lt;/p&gt;
&lt;p&gt;Since the multiplicand in the sample code is 1.0, the result left in AR (bottom row of left half) should be
identical with the initial value of the multiplier in QR (top row of right half), but clearly something is
amiss with the least significant bits of the result.  We can also see that things go awry as the first
string off consecutive 1s starts through the state machine (adjusting the values in the test program shows
that this is always the case).  So this looks like an issue with the state machine or the FALU control
signals that derive from it.  Taking a look with the logic analyzer shows this:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/multiply-trace.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;This is a portion of the multiply dealing with the a string of two consecutive 1s on the multiplier.
The clocking and state machine state bits look correct (note that AR clocks falling edges).
A four-cycle pause is inserted in the AR clock whenever the state-machine dictates either an add
or a subtract is to occur, in order to allow for propagation time through the ALUs.  The AR and ALU function
selects  also look correct: AR 1 for shift, 3 for load, and ALU 6 for subtract, 9 for add.  Marker X here
should be clocking in a subtraction at the start of the string, followed by two shifts, then an add at
marker O at the end of the string.&lt;/p&gt;
&lt;p&gt;But the ALU CIN control signal looks incorrect -- it is held high throughout the multiply, but should be
driven low for the subtraction at marker X.  This means the ALU function actually being selected is A-B-1
instead of A-B, which would produce the results seen above (the first subtract borrows an extra 1 all the
way across the partial product, then subsequent subtracts borrow from the resulting 1s on the right).
So it looks like the logic that generates CIN needs a look:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/cin-logic.png'/&gt;&lt;/p&gt;
&lt;p&gt;Stepping through the multiply with the KM11 in single-clock-transition mode, arriving at the first
subtract, FRMH MUL SUB L is asserted low to pin 3 of E21, but pin 6 does not go high.  Looks like a
failed gate; pulled the part, put in a socket, and put a replacement 74H10 on order.  All for now!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Thu, 24 Nov 2016 00:00:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-11-24:/diagnostics-13.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics XII - FP11 FPU, cont.</title><link>http://fritzm.github.io/diagnostics-12.html</link><description>&lt;p&gt;Some spare 74194 arrived in the mail; popped one in to the socket I had prepared at E15 on the FRL board,
and the FP add/subtract problem is fixed.  The following FP11 diagnostics now pass:&lt;/p&gt;
&lt;style&gt;
.diaglist { display: inline; border-collapse: collapse; margin-right: 1em; }
.diaglist caption { font-weight: bold; }
.diaglist tr:nth-child(even) { background-color: #f2f2f2; }
.diaglist th, .diaglist td { padding: 5px; }
.diaglist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="diaglist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Diagnostic&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;CFPAB0.BIC&lt;/td&gt;&lt;td&gt;LDFPS,STFPS,SETI,SETL,SETF,SETD,CFCC&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPBB0.BIC&lt;/td&gt;&lt;td&gt;STST&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPCD0.BIC&lt;/td&gt;&lt;td&gt;LDF,LDD,STF,STD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPDC0.BIC&lt;/td&gt;&lt;td&gt;ADDF,ADDD,SUBF,SUBD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPEB0.BIC&lt;/td&gt;&lt;td&gt;CMPF,CMPD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPFB0.BIC&lt;/td&gt;&lt;td&gt;MULF,MULD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPGC0.BIC&lt;/td&gt;&lt;td&gt;DIVF,DIVD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPHB0.BIC&lt;/td&gt;&lt;td&gt;CLR,TST,ABS,NEG&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPIB0.BIC&lt;/td&gt;&lt;td&gt;LDCDF,LDCFD,STCFD,STCDF&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPJB0.BIC&lt;/td&gt;&lt;td&gt;LDCJX,STCXJ&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPKB0.BIC&lt;/td&gt;&lt;td&gt;LDEXP&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPMB0.BIC&lt;/td&gt;&lt;td&gt;MAINT&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;...which is almost everything.  The last failing diagnostic is CFPLB0, which tests MODF and MODD.  Set up
a similar test program for this instruction:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
        &lt;span class="nt"&gt;000001&lt;/span&gt;                          &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;170011&lt;/span&gt;                  &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;SETD&lt;/span&gt;                &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;DOUBLE&lt;/span&gt; &lt;span class="nt"&gt;PRECISION&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;001002&lt;/span&gt;  &lt;span class="nt"&gt;172467&lt;/span&gt;  &lt;span class="nt"&gt;000020&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;D1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC0&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;FIRST&lt;/span&gt; &lt;span class="nt"&gt;OPERAND&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;D1&lt;/span&gt;
&lt;span class="nt"&gt;001006&lt;/span&gt;  &lt;span class="nt"&gt;172567&lt;/span&gt;  &lt;span class="nt"&gt;000024&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;D2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC1&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;SECOND&lt;/span&gt; &lt;span class="nt"&gt;OPERAND&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;D2&lt;/span&gt;
&lt;span class="nt"&gt;001012&lt;/span&gt;  &lt;span class="nt"&gt;171401&lt;/span&gt;                          &lt;span class="nt"&gt;MODD&lt;/span&gt;    &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC0&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;MOD&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;FRAC&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;INT&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;001014&lt;/span&gt;  &lt;span class="nt"&gt;174067&lt;/span&gt;  &lt;span class="nt"&gt;000026&lt;/span&gt;                  &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;D3&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;FRAC&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;D3&lt;/span&gt;
&lt;span class="nt"&gt;001020&lt;/span&gt;  &lt;span class="nt"&gt;174167&lt;/span&gt;  &lt;span class="nt"&gt;000032&lt;/span&gt;                  &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;D4&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;INT&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;D4&lt;/span&gt;
&lt;span class="nt"&gt;001024&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HALT&lt;/span&gt;
&lt;span class="nt"&gt;001026&lt;/span&gt;  &lt;span class="nt"&gt;040200&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040200&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;001034&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001036&lt;/span&gt;  &lt;span class="nt"&gt;040300&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040300&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;001044&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001046&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001054&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001056&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001064&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This does show a problem: after exection, the integer result at D4 seems correct, but the fractional result
in D3 is incorrect (037777 177777 177777 177777).  Verified the correct microflow with the KM11.&lt;/p&gt;
&lt;p&gt;Stopped in microstate MOD.22, and examined ALUs on FRL where the fractional result is masked.  ALU function
selects (for A &amp;amp; ~B) and B inputs (all zeros for mask) look correct throughout.  A inputs, however,
are all ones except the least significant bit, which seems incorrect.  All for now -- will dig a little deeper on the microcode flows and follow up on this lead next time...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 30 Oct 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-10-30:/diagnostics-12.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics XI - FP11 FPU, cont.</title><link>http://fritzm.github.io/diagnostics-11.html</link><description>&lt;p&gt;Wrote some small test programs to investigate FP add/subtract.  Turns out that single-precision add/subtract
works fine, but double-precision results come back with some erroneous bits set in the fraction.
Here's the test code I ended up using for troublshooting -- when executed on my machine, bits 24 and 25
end up incorrectly set in the result at D3:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
        &lt;span class="nt"&gt;000001&lt;/span&gt;                          &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;1&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                                  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;170011&lt;/span&gt;                  &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;SETD&lt;/span&gt;                &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;DOUBLE&lt;/span&gt; &lt;span class="nt"&gt;PRECISION&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;001002&lt;/span&gt;  &lt;span class="nt"&gt;172467&lt;/span&gt;  &lt;span class="nt"&gt;000014&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;D1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC0&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;FIRST&lt;/span&gt; &lt;span class="nt"&gt;ADDEND&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;D1&lt;/span&gt;
&lt;span class="nt"&gt;001006&lt;/span&gt;  &lt;span class="nt"&gt;172567&lt;/span&gt;  &lt;span class="nt"&gt;000020&lt;/span&gt;                  &lt;span class="nt"&gt;LDD&lt;/span&gt;     &lt;span class="nt"&gt;D2&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC1&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FETCH&lt;/span&gt; &lt;span class="nt"&gt;SECOND&lt;/span&gt; &lt;span class="nt"&gt;ADDEND&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;D2&lt;/span&gt;
&lt;span class="nt"&gt;001012&lt;/span&gt;  &lt;span class="nt"&gt;172100&lt;/span&gt;                          &lt;span class="nt"&gt;ADDD&lt;/span&gt;    &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC1&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ADD&lt;/span&gt; &lt;span class="nt"&gt;THEM&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;RESULT&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;001014&lt;/span&gt;  &lt;span class="nt"&gt;174167&lt;/span&gt;  &lt;span class="nt"&gt;000022&lt;/span&gt;                  &lt;span class="nt"&gt;STD&lt;/span&gt;     &lt;span class="nt"&gt;AC1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;D3&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;RESULT&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;D3&lt;/span&gt;
&lt;span class="nt"&gt;001020&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HALT&lt;/span&gt;
&lt;span class="nt"&gt;001022&lt;/span&gt;  &lt;span class="nt"&gt;040200&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;001030&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001032&lt;/span&gt;  &lt;span class="nt"&gt;040200&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;040000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;5&lt;/span&gt;
&lt;span class="nt"&gt;001040&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001042&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;D3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;
&lt;span class="nt"&gt;001050&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;
        &lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;So, the usual procedure: KM11 in the floating point slot, and FRL (where these bits are handled) out on
extenders.  First step is to verify the microcode sequencing with the KM11 and front panel, and it looks good.
In particular, the FPU is sequencing through states ADD.04 and ADD.06 per expectation for double-precision,
branching correctly for non-zero operands, and taking the equal exponents branch through ADD.24 (refer to
page FLOWS 8 of the FP11 engineering drawings).&lt;/p&gt;
&lt;p&gt;Next, stopped in state ADD.38, where the fraction addition occurs, and scanned the inputs and outputs of
all the 74181 bitslice ALUs with a logic probe. Bit 28 of the A input to the FALU (E16 pin 2, refer to page
FRLJ of the FP11 engineering drawings) is incorrectly set.  This is arriving via the AR register.&lt;/p&gt;
&lt;p&gt;The value in the AR register is originally fetched from the register scratchpad, then flows through QR, BR,
and the FALU during microstates ADD.04, ADD.06, and ADD.02.  Some more stepping and logic probe work showed
that the fraction values are correct along these paths through these states.  So it looks like AR itself
may be at fault.&lt;/p&gt;
&lt;p&gt;Set up the logic analyzer on E15, which is a 74194 shift-register that holds bits 28-31 of AR.  It looks
like it is indeed faulty:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/bad-ar.jpg'/&gt;&lt;/p&gt;
&lt;p&gt;Here we can see what should be a broadside load: positive CLK edge, S0 and S1 both asserted, and inputs of
all zeros.  But the output sticks brokenly at 8.  Pulled this shift register, soldered in a socket, and put
a replacement and a couple of spares on order.  All for now, until the parts arrive.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 23 Oct 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-10-23:/diagnostics-11.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics X - FP11 FPU, cont.</title><link>http://fritzm.github.io/diagnostics-10.html</link><description>&lt;p&gt;Okay, here's the dig in on the FP11 STST diagnostic failure.  As detailed previously, I'd been seeing an
incorrect FEC after executing a small test program to generate a minus-zero condition.  I'd verified that
the microcode sequence was per expectation, and that the correct FEC was being stored and retrieved from
AC7[1:0] in microstates TRP.50 and the start of TRP.60.&lt;/p&gt;
&lt;p&gt;The end of TCP.60 and all of state TRP.70 are used to move the FEC and FEA from AC7[1:0] to AC7[3:2] via QR
and BR, and something was going awry here.  Since the nominal FEC is octal 14, I decided just to trace the
four least significant bits.  Consulting the engineering drawings, the nominal flow of these bits through
logic on the FRL during these states would be:&lt;/p&gt;
&lt;style&gt;
.logiclist { display: inline; border-collapse: collapse; margin-right: 1em; }
.logiclist caption { font-weight: bold; }
.logiclist tr:nth-child(4n+2), .logiclist tr:nth-child(4n+3) { background-color: #f2f2f2; }
.logiclist .microstate { background-color: #ffffff; }
.logiclist th, .logiclist td { padding: 5px; }
.logiclist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="logiclist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Function&lt;/th&gt;&lt;th&gt;Package&lt;/th&gt;&lt;th&gt;Dir&lt;/th&gt;&lt;th colspan="4"&gt;Pin:Level&lt;/th&gt;&lt;th&gt;Microstate&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;ACi&amp;lt;03:00&amp;gt;&lt;/td&gt;&lt;td&gt;E85&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;11:H&lt;/td&gt;&lt;td&gt;9:H&lt;/td&gt;&lt;td&gt;7:L&lt;/td&gt;&lt;td&gt;5:L&lt;/td&gt;&lt;td class="microstate" rowspan="2"&gt;TRP.60 (2)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;QR&amp;lt;06:03&amp;gt;&lt;/td&gt;&lt;td&gt;E74&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;3:H&lt;/td&gt;&lt;td&gt;4:H&lt;/td&gt;&lt;td&gt;5:L&lt;/td&gt;&lt;td&gt;6:L&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;15:H&lt;/td&gt;&lt;td&gt;14:H&lt;/td&gt;&lt;td&gt;13:L&lt;/td&gt;&lt;td&gt;12:L&lt;/td&gt;&lt;td class="microstate" rowspan="14"&gt;TRP.70 (3)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;BR&amp;lt;07:04&amp;gt;&lt;/td&gt;&lt;td&gt;E75&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;13:H&lt;/td&gt;&lt;td&gt;12:H&lt;/td&gt;&lt;td&gt;4:L&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;15:H&lt;/td&gt;&lt;td&gt;10:H&lt;/td&gt;&lt;td&gt;2:L&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;BR&amp;lt;03:00&amp;gt;&lt;/td&gt;&lt;td&gt;E87&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;5:L&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;7:L&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;FALU&amp;lt;07:04&amp;gt;&lt;/td&gt;&lt;td&gt;E77&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;20:H&lt;/td&gt;&lt;td&gt;22:H&lt;/td&gt;&lt;td&gt;1:L&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;11:L&lt;/td&gt;&lt;td&gt;10:L&lt;/td&gt;&lt;td&gt;9:H&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;FALU&amp;lt;03:00&amp;gt;&lt;/td&gt;&lt;td&gt;E89&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;18:L&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;13:H&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ACMX&amp;lt;03:02&amp;gt;&lt;/td&gt;&lt;td&gt;E83&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;13:L&lt;/td&gt;&lt;td&gt;3:L&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;9:L&lt;/td&gt;&lt;td&gt;7:L&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ACMX&amp;lt;01:00&amp;gt;&lt;/td&gt;&lt;td&gt;E84&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;13:H&lt;/td&gt;&lt;td&gt;3:H&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;out&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;9:H&lt;/td&gt;&lt;td&gt;7:H&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ACi&amp;lt;03:00&amp;gt;&lt;/td&gt;&lt;td&gt;E85&lt;/td&gt;&lt;td&gt;in&lt;/td&gt;&lt;td&gt;12:L&lt;/td&gt;&lt;td&gt;10:L&lt;/td&gt;&lt;td&gt;6:H&lt;/td&gt;&lt;td&gt;4:H&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note that the bit values are inverted here by the FALU, since the reigster file used on the FP11 has
inverting outputs.&lt;/p&gt;
&lt;p&gt;Threw the FRL out on extenders and starting verifying the chart above with a logic probe.  Surprisingly,
everything probed out correctly (?!)  Reset and ran the test program and verified that the bug had gone away.
Hmmm...  My only guess here is that there was some dust or a whisker shorting some of the pins that I
dislodged with the logic probe, or perhaps an oxidized board conection.  In any case, it seems to work
robustly now.  Of the FP11 diagnostics, the following now pass:&lt;/p&gt;
&lt;style&gt;
.diaglist { display: inline; border-collapse: collapse; margin-right: 1em; }
.diaglist caption { font-weight: bold; }
.diaglist tr:nth-child(even) { background-color: #f2f2f2; }
.diaglist th, .diaglist td { padding: 5px; }
.diaglist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="diaglist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Diagnostic&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;CFPAB0.BIC&lt;/td&gt;&lt;td&gt;LDFPS,STFPS,SETI,SETL,SETF,SETD,CFCC&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPBB0.BIC&lt;/td&gt;&lt;td&gt;STST&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPCD0.BIC&lt;/td&gt;&lt;td&gt;LDF,LDD,STF,STD&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPHB0.BIC&lt;/td&gt;&lt;td&gt;CLR,TST,ABS,NEG&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CFPKB0.BIC&lt;/td&gt;&lt;td&gt;LDEXP&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;CFPDB0.BIC, which tests floating point adds/subtracts, is failing.  All for now -- on to debugging
add/subtract next time...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 01 Oct 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-10-01:/diagnostics-10.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: H720E teardown and inspection</title><link>http://fritzm.github.io/h720e-teardown.html</link><description>&lt;p&gt;Started in on the H720E power supply that is part of RK05 storage system.  Just initial teardown, cleaning, and
inspection for obviously failed parts.  Looks pretty good, though there is a lot of dust and grime because this
unit lost its top cover plate somewhere over the years (I'll have to build some sort of replacement).&lt;/p&gt;
&lt;p&gt;There are a couple of 22,000 mFD 50v electrolytic caps here that I'll try reforming before hitting them at full power,
since they've been sitting idle for upwards of 30yrs!  Also, one obviously leaking 330 mfd axial on regulator board, so
I'll replace this and all its identical twins.  Parts on order...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/h720e-breakdown.jpg"&gt;&lt;img src='/images/pdp11/h720e-breakdown_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/h720e-leaking-cap.jpg"&gt;&lt;img src='/images/pdp11/h720e-leaking-cap_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 18 Sep 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-09-18:/h720e-teardown.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics IX - FP11 FPU, cont.</title><link>http://fritzm.github.io/diagnostics-9.html</link><description>&lt;p&gt;Did a lot of reading on the FP11 design.  A few interesting notes that are buried in the maintenance manual:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;When debugging FP11 microcode with a KM11 in single-microstep mode, the 11/45 front panel microcode display shows
the address of the &lt;em&gt;next&lt;/em&gt; microinstruction, NOT the current microinstruction.  This is because the stop-point for
single microinstruction is at a point between T2 and T3, just &lt;em&gt;after&lt;/em&gt; the next microinstruction addr has been
calculated.  This is different behavior than the 11/45 CPU front panel microaddress display.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There's a note in the maintenance manual that explicitly cautions that when using extender boards for debug, the
RC maintenance clock should be used, and set with period &amp;gt;50ns.  I had not been doing similar while debugging the
KB11-A CPU, and maybe this explains the occasional different behavior I'd see when throwing boards out on extenders...
In particular, I had seen this when debugging a spare CPU GRA; next time I return to that board I will try the CPU
RC clock.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Okay, so here's my first simple test program for STST:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;AC0&lt;/span&gt;&lt;span class="o"&gt;=%&lt;/span&gt;&lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;ASECT&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="o"&gt;.=&lt;/span&gt;&lt;span class="nt"&gt;1000&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;  &lt;span class="nt"&gt;170127&lt;/span&gt;  &lt;span class="nt"&gt;044000&lt;/span&gt;  &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;LDFPS&lt;/span&gt;   &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;044000&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FID&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;FIUV&lt;/span&gt;
&lt;span class="nt"&gt;001004&lt;/span&gt;  &lt;span class="nt"&gt;172467&lt;/span&gt;  &lt;span class="nt"&gt;000004&lt;/span&gt;          &lt;span class="nt"&gt;LDF&lt;/span&gt;     &lt;span class="nt"&gt;NEGZ&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;AC0&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;A&lt;/span&gt; &lt;span class="nt"&gt;MINUS-ZERO&lt;/span&gt;
&lt;span class="nt"&gt;001010&lt;/span&gt;  &lt;span class="nt"&gt;170300&lt;/span&gt;                  &lt;span class="nt"&gt;STST&lt;/span&gt;    &lt;span class="nt"&gt;R0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;FEC&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;R0&lt;/span&gt;
&lt;span class="nt"&gt;001012&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;                  &lt;span class="nt"&gt;HALT&lt;/span&gt;
&lt;span class="nt"&gt;001014&lt;/span&gt;  &lt;span class="nt"&gt;100000&lt;/span&gt;  &lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;NEGZ&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;   &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;WORD&lt;/span&gt;   &lt;span class="nt"&gt;100000&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;   &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;MINUS-ZERO&lt;/span&gt;
&lt;span class="nt"&gt;001000&lt;/span&gt;                          &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;END&lt;/span&gt;    &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This would be expected to produce the 000014 "Floating Undefined Variable" (minus-zero) exception code in R0, but I see
an incorrect value of 177417.  Using the KM11 on the FPU shows the -0 trap and STST microstate flow is per expectation.&lt;/p&gt;
&lt;p&gt;Put the FRL out on the extender and started stepping the microcode, examining the state of the pins at the AC register
file along the way.  In the -0 trap flow, the FEC code 000014 presented (inverted) at TRP.50 via the EALU, and
subsequently retrieved at TRP.60 looks correct. However, the value presented at TRP.70 via QR, BR, and the FALU does
not.  Out of time this weekend; Will have to chase signals back through those paths next time!&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/minus-zero-microcode.png'/&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 10 Sep 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-09-10:/diagnostics-9.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics VIII - FP11 FPU</title><link>http://fritzm.github.io/diagnostics-8.html</link><description>&lt;p&gt;Slotted in FP11 spares that I hadn't tried previously, and this has produced some improved results -- returning to
diagnostic CKBME0 (11/45 traps) this now passes with the floating point installed.  Additionally, diagnostic
CFPAB0 passes.&lt;/p&gt;
&lt;p&gt;CFPBB0 and CFPCD0, however, are failing.  Unfortunately, the source code for these is not available in the PDP-11
diagnostics database at retrocmp.  The names of the diagnostics tell which instructions they are testing, though.
CFPBB0 is annotated as testing the STST instruction.  Rather than work through disassembling the rather lengthy
diagnostics, I'll probably just write some simple test programs around the STST instruction for next time.  In the
meantime, I'll do some reading on the FP11 in preparation for microcode-step debug.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 03 Sep 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-09-03:/diagnostics-8.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics VII - KT11 MMU</title><link>http://fritzm.github.io/diagnostics-7.html</link><description>&lt;p&gt;Moving on to the KT11 MMU: running the first diagnostic in the CKT suite, got error reports at 010340, 010560, and
011000.  Consulted the diagnostic listings, and these particular tests have to do with D-space translations from
kernel, supervisor, and user modes.  The D-space logic is largely on module SSR, so I swapped this out for a spare.
After that, I was able to pass the full suite of basic MMU tests:&lt;/p&gt;
&lt;style&gt;
.diaglist { display: inline; border-collapse: collapse; margin-right: 1em; }
.diaglist caption { font-weight: bold; }
.diaglist tr:nth-child(even) { background-color: #f2f2f2; }
.diaglist th, .diaglist td { padding: 5px; }
.diaglist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="diaglist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Diagnostic&lt;/th&gt;&lt;th&gt;BEL&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;CKTAB0.BIC&lt;/td&gt;&lt;td&gt;017412&lt;/td&gt;&lt;td&gt;KT11-C basic logic part 1&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKTBC0.BIC&lt;/td&gt;&lt;td&gt;015674&lt;/td&gt;&lt;td&gt;KT11-C basic logic part 2&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKTCA0.BIC&lt;/td&gt;&lt;td&gt;023304&lt;/td&gt;&lt;td&gt;KT11-C access keys&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKTDA0.BIC&lt;/td&gt;&lt;td&gt;016360&lt;/td&gt;&lt;td&gt;KT11-C MTPD and MTPI&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKTEB0.BIC&lt;/td&gt;&lt;td&gt;015310&lt;/td&gt;&lt;td&gt;KT11-C MFPD and MFPI&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKTFD0.BIC&lt;/td&gt;&lt;td&gt;016422&lt;/td&gt;&lt;td&gt;KT11-C aborts&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Put the failing SSE module in the repair queue along with the other failed spares I've identified along the way, and
will return to troubleshoot/repair it later.  For now, things are looking pretty good with the CPU!  I still need to
run and pass the more heavyweight diagnostics: the 11/45 instruction exerciser, KT11 exerciser, and MS11-L exerciser.
All three of these still seem to have halts, but they are quite complicated diagnostics in comparison to the rest,
making use of additional peripherals, etc.  I'll need to study these a bit before I can be sure I am using them
correctly.  I have also skipped the power fail diagnostics for now as I will need to restore some core memory in order
for these to work correctly.&lt;/p&gt;
&lt;p&gt;Next up will be to work on the FPU...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 13 Aug 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-08-13:/diagnostics-7.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics VI - GRA ALU PROM repair</title><link>http://fritzm.github.io/diagnostics-6.html</link><description>&lt;p&gt;Data I/O Series 22 PROM programmer from eBay showed up, as well as some unprogrammed Signetics 82S123.  Punched in the
subsidiary ALU control ROM contents from the listing on GRAK in the 11/45 engineering drawings and burnt a new PROM.
Put a socket and the new PROM in place of the failed part on my original GRA, slotted it into the CPU, and success!
Diagnostic CKBOA0 now passes.  I will probably return to the other faulty GRA at a later point, as it is partially
diagnosed and I like to have spares working and ready to go.&lt;/p&gt;
&lt;p&gt;Next time I'll be moving on to the CKT series of tests for the KT11 memory management cards...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/prom-programmer.jpg"&gt;&lt;img src='/images/pdp11/prom-programmer_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/alu-prom-replaced.jpg"&gt;&lt;img src='/images/pdp11/alu-prom-replaced_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 07 Aug 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-08-07:/diagnostics-6.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics V - D0AA0-D0MA0, CKBOA0</title><link>http://fritzm.github.io/diagnostics-5.html</link><description>&lt;p&gt;The day gig has been keeping me pretty busy for the last couple of weeks, but had some time to work on the PDP-11
again this weekend, so here's an update.&lt;/p&gt;
&lt;p&gt;Looking a little deeper at the diagnostics database over on retrocmp.com, I realized that I had skipped the entire
set of generic 11-family "D0" tests.  Downloaded and ran these via PDP11GUI and they all passed.  BEL character
patch locations, as described previously, are summarized here for future reference:&lt;/p&gt;
&lt;style&gt;
.diaglist { display: inline; border-collapse: collapse; margin-right: 1em; }
.diaglist caption { font-weight: bold; }
.diaglist tr:nth-child(even) { background-color: #f2f2f2; }
.diaglist th, .diaglist td { padding: 5px; }
.diaglist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="diaglist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Diagnostic&lt;/th&gt;&lt;th&gt;BEL&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;D0AA0.BIN&lt;/td&gt;&lt;td&gt;014212&lt;/td&gt;&lt;td&gt;Branch&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0BA0.BIN&lt;/td&gt;&lt;td&gt;004336&lt;/td&gt;&lt;td&gt;Con branch&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0CA0.BIN&lt;/td&gt;&lt;td&gt;005526&lt;/td&gt;&lt;td&gt;Unary&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0DA0.BIN&lt;/td&gt;&lt;td&gt;016370&lt;/td&gt;&lt;td&gt;Binary&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0EA0.BIN&lt;/td&gt;&lt;td&gt;010562&lt;/td&gt;&lt;td&gt;Rotate/shift&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0FA0.BIN&lt;/td&gt;&lt;td&gt;017224&lt;/td&gt;&lt;td&gt;CMP equality&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0GA0.BIN&lt;/td&gt;&lt;td&gt;013650&lt;/td&gt;&lt;td&gt;CMP non-equality&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0HA0.BIN&lt;/td&gt;&lt;td&gt;013434&lt;/td&gt;&lt;td&gt;Move&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0IA0.BIN&lt;/td&gt;&lt;td&gt;014126&lt;/td&gt;&lt;td&gt;Bit set clear test&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0JA0.BIN&lt;/td&gt;&lt;td&gt;007472&lt;/td&gt;&lt;td&gt;Add&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0KA0.BIN&lt;/td&gt;&lt;td&gt;007124&lt;/td&gt;&lt;td&gt;Subtract&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0LA0.BIN&lt;/td&gt;&lt;td&gt;015722&lt;/td&gt;&lt;td&gt;Jump&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;D0MA0.BIN&lt;/td&gt;&lt;td&gt;003250&lt;/td&gt;&lt;td&gt;JSR RTS RTI&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Of the "CKB" series of tests, CKBOA0 (11/45 states) is the only one I that is not yet passing.  Looking into
this a little further, the first failing sub-test is T65:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;010540&lt;/span&gt; &lt;span class="nt"&gt;010701&lt;/span&gt;                  &lt;span class="nt"&gt;T65&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;    &lt;span class="nt"&gt;SCOPE&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;
&lt;span class="nt"&gt;010542&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;030000&lt;/span&gt;  &lt;span class="nt"&gt;177776&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;PUM&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;PSW&lt;/span&gt;       &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;KERNEL&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;PREV&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;010550&lt;/span&gt; &lt;span class="nt"&gt;012706&lt;/span&gt;  &lt;span class="nt"&gt;000500&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;KPTR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;KSP&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;KERNEL&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt;
&lt;span class="nt"&gt;010554&lt;/span&gt; &lt;span class="nt"&gt;012716&lt;/span&gt;  &lt;span class="nt"&gt;000700&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;UPTR&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;KSP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;010560&lt;/span&gt; &lt;span class="nt"&gt;106606&lt;/span&gt;                          &lt;span class="nt"&gt;MTPD&lt;/span&gt;    &lt;span class="nt"&gt;USP&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STATCK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt;
&lt;span class="nt"&gt;010562&lt;/span&gt; &lt;span class="nt"&gt;005067&lt;/span&gt;  &lt;span class="nt"&gt;170110&lt;/span&gt;                  &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="nt"&gt;UPTR-2&lt;/span&gt;
&lt;span class="nt"&gt;010566&lt;/span&gt; &lt;span class="nt"&gt;052737&lt;/span&gt;  &lt;span class="nt"&gt;140000&lt;/span&gt;  &lt;span class="nt"&gt;177776&lt;/span&gt;          &lt;span class="nt"&gt;BIS&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;UM&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;PSW&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;PREV&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;010574&lt;/span&gt; &lt;span class="nt"&gt;106506&lt;/span&gt;                          &lt;span class="nt"&gt;MFPD&lt;/span&gt;    &lt;span class="nt"&gt;USP&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;PUSH&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt; &lt;span class="nt"&gt;ONTO&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt;
&lt;span class="nt"&gt;010576&lt;/span&gt; &lt;span class="nt"&gt;042737&lt;/span&gt;  &lt;span class="nt"&gt;140000&lt;/span&gt;  &lt;span class="nt"&gt;177776&lt;/span&gt;          &lt;span class="nt"&gt;BIC&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;UM&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;PSW&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;KERNEL&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;PREV&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;MODE&lt;/span&gt;
&lt;span class="nt"&gt;010604&lt;/span&gt; &lt;span class="nt"&gt;106506&lt;/span&gt;                          &lt;span class="nt"&gt;MFPD&lt;/span&gt;    &lt;span class="nt"&gt;USP&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;PUSH&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt; &lt;span class="nt"&gt;ONTO&lt;/span&gt; &lt;span class="nt"&gt;KERNEL&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt;
&lt;span class="nt"&gt;010606&lt;/span&gt; &lt;span class="nt"&gt;022716&lt;/span&gt;  &lt;span class="nt"&gt;000676&lt;/span&gt;                  &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;UPTR-2&lt;/span&gt;&lt;span class="o"&gt;,(&lt;/span&gt;&lt;span class="nt"&gt;KSP&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;THAT&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt; &lt;span class="nt"&gt;WAS&lt;/span&gt;
&lt;span class="nt"&gt;010612&lt;/span&gt; &lt;span class="nt"&gt;001401&lt;/span&gt;                          &lt;span class="nt"&gt;BEQ&lt;/span&gt;     &lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;PUSHED&lt;/span&gt; &lt;span class="nt"&gt;PROPERLY&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;ONCE&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="nt"&gt;010614&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HLT&lt;/span&gt;                      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="nt"&gt;010616&lt;/span&gt; &lt;span class="nt"&gt;022767&lt;/span&gt;  &lt;span class="nt"&gt;000700&lt;/span&gt;  &lt;span class="nt"&gt;170052&lt;/span&gt;          &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;UPTR&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;UPTR-2&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;THAT&lt;/span&gt; &lt;span class="nt"&gt;USER&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt; &lt;span class="nt"&gt;IS&lt;/span&gt; &lt;span class="nt"&gt;ON&lt;/span&gt; &lt;span class="nt"&gt;THE&lt;/span&gt;
&lt;span class="nt"&gt;010624&lt;/span&gt; &lt;span class="nt"&gt;001401&lt;/span&gt;                          &lt;span class="nt"&gt;BEQ&lt;/span&gt;     &lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;USERS&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt;
&lt;span class="nt"&gt;010626&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HLT&lt;/span&gt;                      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This runs amok on the MFPD instruction at 010574, which should push the user stack pointer onto the user stack.
Instead, the user stack pointer is pushed to memory at an incorrect address; 010676 instead of 000676.  This actually
overwrites subsequent test code. Since the value pushed is 000700, a hard-coded loop is created that prevents the
test from completing the pass even if resumed from halt.&lt;/p&gt;
&lt;p&gt;The relevant states in the microcode flow here are MFP.80, MFP.90, and MFP.10:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/mfpd-microcode.png'/&gt;&lt;/p&gt;
&lt;p&gt;Stopping at T2 of MFP.10 using the KM11, I can see that the correct value 000700 was fetched to DR (as displayed by
the console address lights), but the incorrect value of 010676 is appearing at the output of the ALU/shifter (as
displayed by the console data lights when set to data paths).  Throwing the DAP card out on extenders and taking
a look around with a logic probe revealed that the errant bit 12 is sourcing from the ALU.  At each slice of the ALU,
function selectors S3-S0 are correct, CIN is correct, and overall B-mux constant value "2" is correct.  The errant bit
is arriving to the ALU from the A-mux...&lt;/p&gt;
&lt;p&gt;Chasing this upstream, A-mux selectors S1,S0 are correct, but the bad bit arrives to the mux input on GRAH SR12.  Hmmm,
maybe this is one of the things the "BAD" sticker on the GRA is referring to...  Next step is to throw the GRA on
the extender, and chase the signal back towards SR and the register files.  However, here I hit a snag: the M9301
monitor does not run correctly when the GRA is on the extender!  That's pretty weird.  Some investigation with the
KM11 and some hand-toggled instructions revealed that at least the Z status bit is not set correctly/reliably when
the card is on the extender.  Some of the Z bit logic lives on the GRA also, so I can take a look at that, but I am
now out of time for this weekend.  Next time!&lt;/p&gt;
&lt;p&gt;A few other miscellaneous notes in wrap-up:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I have been running with the spare GRA marked "BAD" because the first GRA I was using turned out to have a failed ALU
subsidiary PROM.  In the meantime I tracked down a PROM programmer and some compatible parts on eBay -- these should
arrive sometime this week at which point I should be able to repair the original board and give it another try.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The uPB feature of my home-brew KM11 really doesn't work quite right.  It often stops the machine at the requested
micro-state but on the wrong instruction (skipping the first occurrence of the target state seemingly).  This caused
me a great deal of confusion today, as I was stepping through flows at a different program location than I had assumed,
until I finally noticed the address lights on the console.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ESC key on the VT52 is non-functional, making it impractical to use for RT11.  The key mechanism looks okay from the
top (thanks for more helpful advice from the vcfed forum!).  I think I'll need to pull the keyboard PCB and re-flow the
solder on the affected mechanism as a next step.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Looking forward to checking out Vintage Computer Fest West sometime next weekend!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-31:/diagnostics-5.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics IV - CKBME0</title><link>http://fritzm.github.io/diagnostics-4.html</link><description>&lt;p&gt;Some progress with the CKBME0 diagnostic mentioned previously.  It seems the concern with how the test behaves wrt.
preconditions of the serial interface was well founded.&lt;/p&gt;
&lt;p&gt;In order to debug more easily, I extracted the failing test and built a small loop around it, with a pass counter
and display register update, etc.  In the original test suite, a RESET instruction is executed immediately prior to
the failing test, and it takes some time to come around the failing test on each pass, so I included a RESET and
a delay loop in my test code as well.  I then got failure modes and rates consistent with the original test suite.&lt;/p&gt;
&lt;p&gt;The experiments previously described had indicated timing sensitivity (e.g. running on the RC maintenance clock at 50%
clock speed changed the pass failure rate from ~50% to 100%) so I began to think more seriously about timing
between the processor and the serial card, and how the time taken to circulate the entire suite of tests could affect
the precondition of the serial interface when entering the test in subsequent passes.  A re-read of the DL11
documentation showed that the transmit data is also double-buffered; if the transmit shift register is empty, a
character written to the output buffer will be latched to the transmit shift register causing the output buffer to
go ready again almost immediately.&lt;/p&gt;
&lt;p&gt;I inserted the following code before the BIS/WAIT sequence in the original diagnostic (listed previously), which
establishes consistent preconditions (shift register full, buffer empty) before the BIS.  Success rate went to 100%:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;40&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177566&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ENSURE&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;REGISTER&lt;/span&gt; &lt;span class="nt"&gt;HAS&lt;/span&gt; &lt;span class="nt"&gt;SOMETHING&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;CHEW&lt;/span&gt; &lt;span class="nt"&gt;ON&lt;/span&gt;
&lt;span class="nt"&gt;L0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTCSR&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;XMIT&lt;/span&gt; &lt;span class="nt"&gt;BUFFER&lt;/span&gt;
        &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="nt"&gt;L0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;READY&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;ENSURES&lt;/span&gt; &lt;span class="nt"&gt;INT&lt;/span&gt; &lt;span class="nt"&gt;IMMEDIATELY&lt;/span&gt; &lt;span class="nt"&gt;AFTER&lt;/span&gt; &lt;span class="nt"&gt;BIS&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;I then further verified that the unmodified original diagnostic suite passes 100% if I turn the M7800 down to 4800
Baud.  Worth noting when trying to run these older diagnostics!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 17 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-17:/diagnostics-4.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: VT52 repair</title><link>http://fritzm.github.io/vt52-repair.html</link><description>&lt;p&gt;Replacement oscillator arrived for the VT52, so spent some time getting it back going again.  Things got &lt;em&gt;much&lt;/em&gt; better
with a stable timing chain, but some glitchiness remained -- tracked this down to the socketed microcode ROMS which
just required a reseat.&lt;/p&gt;
&lt;p&gt;Here you can see the new oscillator fitted (silver rectangular can with tie-wrap).  The microcode ROMS are the four
socketed chips towards the right in the picture.  Interestingly, the schematic I have calls for 8 ROMS of half the size
of the ones that are in here, and indeed you can see the unpopulated spaces for these on the board.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/vt52-repair.jpg"&gt;&lt;img src='/images/pdp11/vt52-repair_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 16 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-16:/vt52-repair.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics III - CKBME0</title><link>http://fritzm.github.io/diagnostics-3.html</link><description>&lt;p&gt;Okay, digging into the CKBME0 traps diagnostic now in more detail.  Here I've transcribed the source of the failing
test from the older available diagnostic listing, then re-assembled it at the address matching the more modern
binary.  This makes it a little easier to follow along while debugging the newer binary:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;013604&lt;/span&gt; &lt;span class="nt"&gt;000230&lt;/span&gt;                          &lt;span class="nt"&gt;SPL&lt;/span&gt;     &lt;span class="nt"&gt;0&lt;/span&gt;               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;PRIORITY&lt;/span&gt; &lt;span class="nt"&gt;LEVEL&lt;/span&gt; &lt;span class="nt"&gt;0&lt;/span&gt;
&lt;span class="nt"&gt;013606&lt;/span&gt; &lt;span class="nt"&gt;012706&lt;/span&gt;  &lt;span class="nt"&gt;000500&lt;/span&gt;                  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;STKPTR&lt;/span&gt;&lt;span class="o"&gt;,%&lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;STACK&lt;/span&gt; &lt;span class="nt"&gt;PTR&lt;/span&gt;
&lt;span class="nt"&gt;013612&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;013650&lt;/span&gt;  &lt;span class="nt"&gt;000064&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTY7A&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TPVEC&lt;/span&gt;  &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;TTY&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt; &lt;span class="nt"&gt;VECTOR&lt;/span&gt;
&lt;span class="nt"&gt;013620&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;013644&lt;/span&gt;  &lt;span class="nt"&gt;000014&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTY7B&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;BPTVEC&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;VECTOR&lt;/span&gt;
&lt;span class="nt"&gt;013626&lt;/span&gt; &lt;span class="nt"&gt;005002&lt;/span&gt;                          &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;INDICATOR&lt;/span&gt;
&lt;span class="nt"&gt;013630&lt;/span&gt; &lt;span class="nt"&gt;052737&lt;/span&gt;  &lt;span class="nt"&gt;000100&lt;/span&gt;  &lt;span class="nt"&gt;177564&lt;/span&gt;          &lt;span class="nt"&gt;BIS&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;100&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTCSR&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ALLOW&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt; &lt;span class="nt"&gt;OCCURS&lt;/span&gt; &lt;span class="nt"&gt;AFTER&lt;/span&gt;
                                                               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;THIS&lt;/span&gt; &lt;span class="nt"&gt;INSTRUCTION&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt; &lt;span class="nt"&gt;BEFORE&lt;/span&gt; &lt;span class="nt"&gt;NEXT&lt;/span&gt;
&lt;span class="nt"&gt;013636&lt;/span&gt; &lt;span class="nt"&gt;000001&lt;/span&gt;                  &lt;span class="nt"&gt;WAIT1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;WAIT&lt;/span&gt;                    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;AN&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt;
&lt;span class="nt"&gt;013640&lt;/span&gt; &lt;span class="nt"&gt;005202&lt;/span&gt;                          &lt;span class="nt"&gt;INC&lt;/span&gt;     &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;INCREMENT&lt;/span&gt; &lt;span class="nt"&gt;INDICATOR&lt;/span&gt;
&lt;span class="nt"&gt;013642&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HLT&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;NO&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;AFTER&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt;
&lt;span class="nt"&gt;013644&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;                  &lt;span class="nt"&gt;TTY7B&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;HLT&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;TRAPPED&lt;/span&gt; &lt;span class="nt"&gt;OUT&lt;/span&gt; &lt;span class="nt"&gt;OF&lt;/span&gt; &lt;span class="nt"&gt;WAIT&lt;/span&gt;
&lt;span class="nt"&gt;013646&lt;/span&gt; &lt;span class="nt"&gt;000424&lt;/span&gt;                          &lt;span class="nt"&gt;BR&lt;/span&gt;      &lt;span class="nt"&gt;TTY7EX&lt;/span&gt;          &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;EXIT&lt;/span&gt; &lt;span class="nt"&gt;TEST&lt;/span&gt;
&lt;span class="nt"&gt;013650&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;000040&lt;/span&gt;  &lt;span class="nt"&gt;177566&lt;/span&gt;  &lt;span class="nt"&gt;TTY7A&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;40&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177566&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TYPE&lt;/span&gt; &lt;span class="nt"&gt;SPACE&lt;/span&gt; &lt;span class="nt"&gt;CHAR&lt;/span&gt;
&lt;span class="nt"&gt;013656&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;013674&lt;/span&gt;  &lt;span class="nt"&gt;000064&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTY7C&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TPVEC&lt;/span&gt;  &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;REPOSITION&lt;/span&gt; &lt;span class="nt"&gt;TTY&lt;/span&gt; &lt;span class="nt"&gt;INT&lt;/span&gt; &lt;span class="nt"&gt;VECTOR&lt;/span&gt;
&lt;span class="nt"&gt;013664&lt;/span&gt; &lt;span class="nt"&gt;012766&lt;/span&gt;  &lt;span class="nt"&gt;000020&lt;/span&gt;  &lt;span class="nt"&gt;000002&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;20&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;6&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;PUT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;IN&lt;/span&gt; &lt;span class="nt"&gt;RETURN&lt;/span&gt; &lt;span class="nt"&gt;STATUS&lt;/span&gt;
&lt;span class="nt"&gt;013672&lt;/span&gt; &lt;span class="nt"&gt;000006&lt;/span&gt;                          &lt;span class="nt"&gt;RTT&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RETURN&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;WITH&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt;
                                                               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;AND&lt;/span&gt; &lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;TTY&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt; &lt;span class="nt"&gt;WHEN&lt;/span&gt; &lt;span class="nt"&gt;NULL&lt;/span&gt;
                                                               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHARACTER&lt;/span&gt; &lt;span class="nt"&gt;IS&lt;/span&gt; &lt;span class="nt"&gt;TYPED&lt;/span&gt;
&lt;span class="nt"&gt;013674&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;013716&lt;/span&gt;  &lt;span class="nt"&gt;000014&lt;/span&gt;  &lt;span class="nt"&gt;TTY7C&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTY7D&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;BPTVEC&lt;/span&gt; &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;REPOINT&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt; &lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;TRAP&lt;/span&gt; &lt;span class="nt"&gt;VECTOR&lt;/span&gt; &lt;span class="nt"&gt;AFTER&lt;/span&gt;
                                                               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;TTY&lt;/span&gt; &lt;span class="nt"&gt;HAS&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPTED&lt;/span&gt;
&lt;span class="nt"&gt;013702&lt;/span&gt; &lt;span class="nt"&gt;005037&lt;/span&gt;  &lt;span class="nt"&gt;177564&lt;/span&gt;                  &lt;span class="nt"&gt;CLR&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TTCSR&lt;/span&gt;         &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;DISABLE&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt; &lt;span class="nt"&gt;ENABLE&lt;/span&gt;
&lt;span class="nt"&gt;013706&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;000015&lt;/span&gt;  &lt;span class="nt"&gt;177566&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;15&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177566&lt;/span&gt;
&lt;span class="nt"&gt;013714&lt;/span&gt; &lt;span class="nt"&gt;000006&lt;/span&gt;                          &lt;span class="nt"&gt;RTT&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RETURN&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;INST&lt;/span&gt; &lt;span class="nt"&gt;FOLLOWING&lt;/span&gt; &lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;WITH&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;T&amp;#39;&lt;/span&gt;
                                                               &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;BIT&lt;/span&gt; &lt;span class="nt"&gt;SET&lt;/span&gt;
&lt;span class="nt"&gt;013716&lt;/span&gt; &lt;span class="nt"&gt;000240&lt;/span&gt;                  &lt;span class="nt"&gt;TTY7D&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;NOP&lt;/span&gt;
&lt;span class="nt"&gt;013720&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;000016&lt;/span&gt;  &lt;span class="nt"&gt;000014&lt;/span&gt;  &lt;span class="nt"&gt;TTY7EX&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;BPTVEC&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;BPTVEC&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;RESTORE&lt;/span&gt; &lt;span class="nt"&gt;VECTORS&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;HALT&lt;/span&gt; &lt;span class="nt"&gt;AT&lt;/span&gt;
&lt;span class="nt"&gt;013726&lt;/span&gt; &lt;span class="nt"&gt;012737&lt;/span&gt;  &lt;span class="nt"&gt;000066&lt;/span&gt;  &lt;span class="nt"&gt;000064&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;66&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;TPVEC&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;VECTOR&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;
&lt;span class="nt"&gt;013734&lt;/span&gt; &lt;span class="nt"&gt;005302&lt;/span&gt;                          &lt;span class="nt"&gt;DEC&lt;/span&gt;     &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nt"&gt;2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;CHECK&lt;/span&gt; &lt;span class="nt"&gt;INDICATOR&lt;/span&gt;
&lt;span class="nt"&gt;013736&lt;/span&gt; &lt;span class="nt"&gt;001401&lt;/span&gt;                          &lt;span class="nt"&gt;BEQ&lt;/span&gt;     &lt;span class="o"&gt;.+&lt;/span&gt;&lt;span class="nt"&gt;4&lt;/span&gt;
&lt;span class="nt"&gt;013740&lt;/span&gt; &lt;span class="nt"&gt;000000&lt;/span&gt;                          &lt;span class="nt"&gt;HLT&lt;/span&gt;                     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt; &lt;span class="nt"&gt;DID&lt;/span&gt; &lt;span class="nt"&gt;NOT&lt;/span&gt; &lt;span class="nt"&gt;DO&lt;/span&gt; &lt;span class="nt"&gt;INC&lt;/span&gt; &lt;span class="nt"&gt;INST&lt;/span&gt; &lt;span class="nt"&gt;AFTER&lt;/span&gt; &lt;span class="nt"&gt;INTERRUPT&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This test seems to be designed to return from an interrupt handler to a WAIT instruction, with the T bit set in
the PSW and a serial xmit interrupt pending.  It verifies that the WAIT still "waits" in this circumstance.  It also
verifies that a trace trap &lt;em&gt;does&lt;/em&gt; occur after the immediately following INC instruction when the xmit interrupt
subsequently terminates the WAIT.&lt;/p&gt;
&lt;p&gt;One potential problem with this test concerns the apparent assumption that enabling the xmit interrupt will cause an
immediate trap before the subsequent WAIT instruction.  This is true if the serial transmitter is empty, but if the
transmitter is ever full/busy when this code is entered this assumption may not hold.  Not sure yet if this will ever
be a problem for this test given the surrounding code.&lt;/p&gt;
&lt;p&gt;In any case, as currently written this routine fails about 50% of the time on my 11/45.  The failure mode
is that the processor sits at the WAIT instruction, (address display 013640, PC+2).  Intervention with the
console halt switch (halt then back to enabl) breaks the WAIT microcode loop; console cont then takes us to the halt
at 013740 (address display 013742, PC+2).&lt;/p&gt;
&lt;p&gt;The fact that the routine is tailing out through the halt at 013740 without hitting the halts at 013642 or 013644 is
interesting; this implies that the second serial xmit interrupt to TTY7C has executed.  This is verified by examining
the break trap from the console after the test hangs up on the WAIT -- in the failure case, it is already reset to
point to TTY7D.  So the failure mode seems to be that the return from the second xmit interrupt sometimes goes to the
WAIT instead of the subsequent INC.&lt;/p&gt;
&lt;p&gt;Here is the microcode flow around the WAIT instruction.  The horizontal line across the top is the A fork:&lt;/p&gt;
&lt;p&gt;&lt;img src='/images/pdp11/wait-microcode.png'/&gt;&lt;/p&gt;
&lt;p&gt;Using the KM11, in the failure case I can see the T bit set and the microcode looping through states WAT.00, WAT.20, WAT.30, WAT.11, which seems expected.  I have also verified that executing a WAIT &lt;em&gt;without&lt;/em&gt; the T bit set
loops through states WAT.00 and WAT.10.&lt;/p&gt;
&lt;p&gt;Lastly, running on the RC maintenance clock at about half the usual clock frequency makes the failure case happen
almost 100% of the time.&lt;/p&gt;
&lt;p&gt;Next I'll be needing to learn more about the BRQ logic, and in particular the mechanism by which the second xmit
interrupt nominally causes INTRF to be asserted.  Understanding that should lead me to some things to check with the
logic probe and analyzer...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 09 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-09:/diagnostics-3.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics II</title><link>http://fritzm.github.io/diagnostics-2.html</link><description>&lt;p&gt;Investigated some of the halted diagnostics a bit today.  CKBGB0 (SPL instruction test) was halting at 001404.
Looking at the sources, the diagnostic was waiting at this point for a transmit interrupt from the DL11 that didn't
seem to be arriving. Some troubleshooting turned up that the vector address on my DL11 was jumpered incorrectly.  Fixed this, and the diagnostic now passes.&lt;/p&gt;
&lt;p&gt;CKBME0 (11/45 traps test) is a bit more complicated.  The halt address of 005320 here indicates that the floating
point coprocessor is detected but not trapping per design.  Pulled the floating point cards for now; the diagnostic
now runs through several passes successfully, but regularly hangs up at 013640.  Hitting the halt
switch when it is hung up displays 000342 in the address lights, then with a couple continues it will start up again,
run a bunch more passes, but sooner or later hang up at 013640 again with the same behavior.  This behavior is a
little more difficult to decode because the diagnostic itself is more complicated, and also the binary available from
classicmp is a later revision than the available source code so the addresses don't quite match up.  So I'll need to
spend a little more time reading the diagnostic sources and examining the disassembly in PDP11GUI to make sense of this
one.  And it looks like there will be some downstream work to debug the floating point unit as well; I haven't studied
its design yet at all.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Mon, 04 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-04:/diagnostics-2.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Diagnostics with PDP11GUI</title><link>http://fritzm.github.io/diagnostics.html</link><description>&lt;p&gt;Okay, now that serial is straightened out, on to running diagnostic tests via PDP11GUI.  PDP11GUI itself, as well as
a thorough and useful database of DEC diagnostic programs, are available at &lt;a href="http://www.retrocmp.com/tools"&gt;http://www.retrocmp.com/tools&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since my home computer is a MacBook, I had intended to run PDP11GUI under Wine.  I ran into a problem with this where
PDP11GUI under Wine could not generate its pre-processed machine description temp file, seemingly because of some
incompatible behavior wrt. multiple backslashes in pathnames.  Rather than fight with this too long, I just sprang for
a Windows 10 license and installed a Windows 10 VM; it will come in handy for other Windows-only tools that have
been tweaky to use under Wine as well.&lt;/p&gt;
&lt;p&gt;With PDP11GUI up and running under Windows, results of the initial set of 11/45 CPU diagnostics were very encouraging!
In summary:&lt;/p&gt;
&lt;style&gt;
.diaglist { display: inline; border-collapse: collapse; margin-right: 1em; }
.diaglist caption { font-weight: bold; }
.diaglist tr:nth-child(even) { background-color: #f2f2f2; }
.diaglist th, .diaglist td { padding: 5px; }
.diaglist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="diaglist"&gt;
&lt;thead&gt;
&lt;tr&gt;&lt;th&gt;Diagnostic&lt;/th&gt;&lt;th&gt;BEL&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;th&gt;Status&lt;/th&gt;&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;CKBAB0.BIC&lt;/td&gt;&lt;td&gt;002562&lt;/td&gt;&lt;td&gt;SXT instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBBB0.BIC&lt;/td&gt;&lt;td&gt;003604&lt;/td&gt;&lt;td&gt;SOB instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBCB0.BIC&lt;/td&gt;&lt;td&gt;007410&lt;/td&gt;&lt;td&gt;XOR instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBDC0.BIC&lt;/td&gt;&lt;td&gt;007262&lt;/td&gt;&lt;td&gt;MARK instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBEC0.BIC&lt;/td&gt;&lt;td&gt;002212&lt;/td&gt;&lt;td&gt;RTI/RTT instructions&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBFD0.BIC&lt;/td&gt;&lt;td&gt;002272&lt;/td&gt;&lt;td&gt;stack limit&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBGB0.BIC&lt;/td&gt;&lt;td&gt;001446&lt;/td&gt;&lt;td&gt;SPL instruction&lt;/td&gt;&lt;td&gt;halt 001404&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBHB0.BIC&lt;/td&gt;&lt;td&gt;003762&lt;/td&gt;&lt;td&gt;11/45 registers&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBIB0.BIC&lt;/td&gt;&lt;td&gt;013746&lt;/td&gt;&lt;td&gt;ASH instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBJA0.BIC&lt;/td&gt;&lt;td&gt;014722&lt;/td&gt;&lt;td&gt;ASHC instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBKA0.BIC&lt;/td&gt;&lt;td&gt;014430&lt;/td&gt;&lt;td&gt;MUL instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBLA0.BIC&lt;/td&gt;&lt;td&gt;011574&lt;/td&gt;&lt;td&gt;DIV instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBME0.BIC&lt;/td&gt;&lt;td&gt;016000&lt;/td&gt;&lt;td&gt;11/45 traps&lt;/td&gt;&lt;td&gt;halt 005320&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBNC0.BIC&lt;/td&gt;&lt;td&gt;004702&lt;/td&gt;&lt;td&gt;PIRQ instruction&lt;/td&gt;&lt;td&gt;pass&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;CKBOA0.BIC&lt;/td&gt;&lt;td&gt;013640&lt;/td&gt;&lt;td&gt;11/45 states&lt;/td&gt;&lt;td&gt;halt 000610&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note that these tests are written to output an ASCII BEL to the console on each successful pass.  The terminal
built in to PDP11GUI doesn't sound when given a BEL, however, so it is convenient to patch the BEL literal in the
programs to a visible character (e.g. 000052, ASCII '*') before running them.  This may be done in the memory loader
window in PDP11GUI after "Load" but before "Deposit all".  The patch address I identified for each diagnostic is
listed in the table above as well for convenience.&lt;/p&gt;
&lt;p&gt;So, out of this initial set of tests, only three halts to investigate.  I'll be posting more information here as I look
further into these.&lt;/p&gt;
&lt;p&gt;Regarding the backplane SPC issue discussed in the previous post: Marty from the vcfed.org forum did some investigation
of his 11/45, and reports that he does have +15V (actually +12V on his system) distributed to pin CU1 on slots
26-28.  It seems to be wired over from slot 15 on his system, but it is not clear whether this was a factory wire,
an ECO, or a user mod.&lt;/p&gt;
&lt;p&gt;Marty's 11/45 also has no power distributed to CA1 on this slots, so it's really looking to me like the reference
to that on page 5-10 of the 11/45 maintenance manual is a misprint.  Thanks to Marty for checking all this out!  I'd be
curious to hear from any other 11/45 owners out there regarding wiring of CU1 and CA1 on slots 26-28 in their systems.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/pdp11gui.jpg"&gt;&lt;img src='/images/pdp11/pdp11gui_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 03 Jul 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-07-03:/diagnostics.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Serial console and backplane SPC slots</title><link>http://fritzm.github.io/serial-console.html</link><description>&lt;p&gt;Hit a snag on the way to getting PDP11GUI hooked up: while the M9301 console emulator was working fine with the VT52,
I could not get serial communication to my laptop (MacBook Pro + Keyspan USA-19HS USB serial) to work as expected.  Some
detective work showed that the voltages from the EIA output drivers on the DL11 were way out of whack (+3V for mark,
which should have been a negative voltage).  Somehow the VT52 was able to still make sense out of this signaling,
though the laptop was not.&lt;/p&gt;
&lt;p&gt;Some investigation of power to the DL11, which was sitting in one of the backplane SPC slots (26-28), showed that there
was no distribution of +15V to pin CU1 of these slots where the DL11 was expecting it.  So that explained the bad
driver output voltages.  Moved the DL11 over to the DD11 expansion backplane which does have +15V to that pin, and
serial to/from the laptop started working fine.&lt;/p&gt;
&lt;p&gt;So this raises a bit of a question about the SPC slots on the 11/45 backplane.  Was EIA console serial from these slots
ever supported?  The configurations listed in the 11/45 engineering prints call out only DL11-A, the 20mA current
loop version, which doesn't have EIA drivers and thus doesn't need the +15V supply, so maybe not.  Was +15V distribution
perhaps added to these slots in subsequent revisions or via an ECO?  I'd like to track down a wire list for this or
later revision 11/45 backplanes, and/or a comprehensive list of KB11-A ECOs, but so far haven't seen traces of either
anywhere out there.&lt;/p&gt;
&lt;p&gt;One other curiosity of these SPC slots that came up while investigating this: the power distribution table in
the 11/45 maintenance manual, EK-11045-MM-007, page 5-10, implies that +15V should be distributed to the SPC slots on
CA1.  This is suspicious to me (maybe a typo?) because all other SPC pinouts that I have seen use this pin and CB1
as NPR in/out.  And in checking my backplane, there is no power distribution to those pins.  But slots 27 and 28
(Unibus B) do have their CA1 pins bridged to one another, and their CB1 pins bridged to one another, with what look like
factory installed wire wraps.  This also seems unusual for NPR/NPG.  So, some mysteries remain about these slots...&lt;/p&gt;
&lt;p&gt;In other news, the clock oscillator on the VT52 has given out, so that's down now until I can find a replacement.  They
are out of production and aren't easy to track down, but I do have one lead to follow so far.&lt;/p&gt;
&lt;p&gt;Also, I pulled the suspected failed subsidiary ALU control ROM, tested it in isolation, and verified that it had indeed
failed.  This card is just a spare for me, but I'd like to go ahead and repair it since the fault is isolated.  With
some help from the classiccmp mailing list (thanks guys!) I have a recommendation for some vintage PROM programmers to
stalk on eBay, and some compatible parts, that would allow me to blow a replacement and make the repair.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 26 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-26:/serial-console.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Running the M9301 console emulator</title><link>http://fritzm.github.io/m9301-running.html</link><description>&lt;p&gt;Replacement DRAMs showed up.  Pulled and replaced the two faulty ones on the MS11.  Pic below -- you can see the
replacements are socketed, and are the TI parts instead of the original ITT.  Full address space is working now!  Now
that bank 0 is repaired, trap vectors can conceivably work.&lt;/p&gt;
&lt;p&gt;Jumpered and configured a DL11-E serial card for use as console, slotted in an M9301-YB bootstrap terminator, connected
up the VT52, powered up, and off it goes straight to the console emulator!  That means the basic instruction set tests
in the boot ROM are passing as well, which is great news.&lt;/p&gt;
&lt;p&gt;Next step will be to hook up PDP11GUI and load some more in-depth diagnostics, in order to shake out any
remaining bugs with the CPU and memory system.  Will slot in the FPU at that point for testing and debug as well.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/ms11-repaired.jpg"&gt;&lt;img src='/images/pdp11/ms11-repaired_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/m9301-running.jpg"&gt;&lt;img src='/images/pdp11/m9301-running_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Thu, 23 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-23:/m9301-running.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: CPU debug V -- chasing lights!</title><link>http://fritzm.github.io/cpu-debug-5.html</link><description>&lt;p&gt;Tracked down the source of the inverted result after register-to-register move problem on GRA: outputs of the
subsidiary ALU control ROM E74 on pins 6 and 7 are floating.  Will need some closer inspection to determine if this
is a board fault or a chip fault.  In the meantime, I have a spare GRA which I had been reluctant to try because it
has a "bad" sticker on it...  Decided to give it a try anyway, and it seems to be working much better than the one I
have been debugging.&lt;/p&gt;
&lt;p&gt;Now have enough of the CPU debugged to toggle in and run a simple light chaser program:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;000000&lt;/span&gt;  &lt;span class="nt"&gt;013700&lt;/span&gt;  &lt;span class="nt"&gt;177570&lt;/span&gt;  &lt;span class="nt"&gt;L0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177570&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;R0&lt;/span&gt;    &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOAD&lt;/span&gt; &lt;span class="nt"&gt;COUNT&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;SWITCH&lt;/span&gt; &lt;span class="nt"&gt;REGISTER&lt;/span&gt;
&lt;span class="nt"&gt;000004&lt;/span&gt;  &lt;span class="nt"&gt;005300&lt;/span&gt;          &lt;span class="nt"&gt;L1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;DEC&lt;/span&gt;     &lt;span class="nt"&gt;R0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;COUNT&lt;/span&gt; &lt;span class="nt"&gt;DOWN&lt;/span&gt;
&lt;span class="nt"&gt;000006&lt;/span&gt;  &lt;span class="nt"&gt;001376&lt;/span&gt;                  &lt;span class="nt"&gt;BNE&lt;/span&gt;     &lt;span class="nt"&gt;L1&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;LOOP&lt;/span&gt; &lt;span class="nt"&gt;UNTIL&lt;/span&gt; &lt;span class="nt"&gt;ZERO&lt;/span&gt;
&lt;span class="nt"&gt;000010&lt;/span&gt;  &lt;span class="nt"&gt;006301&lt;/span&gt;                  &lt;span class="nt"&gt;ASL&lt;/span&gt;     &lt;span class="nt"&gt;R1&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SHIFT&lt;/span&gt; &lt;span class="nt"&gt;DISPLAY&lt;/span&gt; &lt;span class="nt"&gt;VALUE&lt;/span&gt;
&lt;span class="nt"&gt;000012&lt;/span&gt;  &lt;span class="nt"&gt;001002&lt;/span&gt;                  &lt;span class="nt"&gt;BNE&lt;/span&gt;     &lt;span class="nt"&gt;L2&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SKIP&lt;/span&gt; &lt;span class="nt"&gt;AHEAD&lt;/span&gt; &lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;NOT&lt;/span&gt; &lt;span class="nt"&gt;SHIFTED&lt;/span&gt; &lt;span class="nt"&gt;OUT&lt;/span&gt;
&lt;span class="nt"&gt;000014&lt;/span&gt;  &lt;span class="nt"&gt;012701&lt;/span&gt;  &lt;span class="nt"&gt;000001&lt;/span&gt;          &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ELSE&lt;/span&gt; &lt;span class="nt"&gt;RELOAD&lt;/span&gt;
&lt;span class="nt"&gt;000020&lt;/span&gt;  &lt;span class="nt"&gt;010137&lt;/span&gt;  &lt;span class="nt"&gt;177570&lt;/span&gt;  &lt;span class="nt"&gt;L2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;     &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;R1&lt;/span&gt;&lt;span class="o"&gt;,@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177570&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;STORE&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;DISPLAY&lt;/span&gt; &lt;span class="nt"&gt;REGISTER&lt;/span&gt;
&lt;span class="nt"&gt;000024&lt;/span&gt;  &lt;span class="nt"&gt;000765&lt;/span&gt;                  &lt;span class="nt"&gt;BR&lt;/span&gt;      &lt;span class="nt"&gt;L0&lt;/span&gt;              &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;REPEAT&lt;/span&gt; &lt;span class="nt"&gt;FROM&lt;/span&gt; &lt;span class="nt"&gt;THE&lt;/span&gt; &lt;span class="nt"&gt;TOP&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;span class="videobox"&gt;
                &lt;iframe width="640" height="390"
                    src='https://www.youtube.com/embed/ZhuzC9v3q-k?rel=0'
                    frameborder='0' webkitAllowFullScreen mozallowfullscreen
                    allowFullScreen&gt;
                &lt;/iframe&gt;
            &lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Some notes on the program and video above since I've received some questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The listing here is shown assembled at location 000000, but the program is relocatable and can be toggled in at any
convenient address (000000, on top of the trap vectors, probably isn't the best choice!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data display should be on "DISPLAY REGISTER" to see the chase.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The front panel toggles are loaded into a counter to control the speed of the chase.  Without some of the most
significant bits set the chase may go too fast to see, especially on older 11's with incandescent indicators.  All
toggles off is a special case: this will be the slowest chase, since as written the counter wraps around when
decremented before being checked for zero.  The video has toggles 15 and 14 up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you look at the address lights in the video, you can see that I ran this program from address 100000.  This was
because at the time I had a fault in the first 16KW of memory on my MS11-L so I couldn't execute any code at lower
addresses.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 19 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-19:/cpu-debug-5.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: MS11-L debug</title><link>http://fritzm.github.io/ms11-debug.html</link><description>&lt;p&gt;After addressing the -15V problem on the MS11, most of the bad behaviors seem to have cleared up except a stuck (on)
bit 6 in the first 16K words of address space (000000-077776).  Hooked up the new logic analyzer, and it has been very
useful in troubleshooting the board -- can easily capture and inspect the timing of complete memory cycles.  Definitely
worth the investment!&lt;/p&gt;
&lt;p&gt;Using the analyzer, I was able to verify the refresh and chip select logic on the board, then track down the stuck bit
to what seems to be a single failed DRAM chip (E96 on the MS11-L engineering drawings).  I'd like to test the entire
card before ordering replacement parts, but need to set up address translation to get beyond the first two banks from
the console.&lt;/p&gt;
&lt;p&gt;Here is the address translation register setup that I used for testing.  This was followed by a deposit of 000001 to
KT11 SR0 (777572) to enable translation.  KT11 SR3 was left all zeros to keep D space disabled.  This setup allows
console access to physical addresses in banks 1 through 7 by appropriate settings of virtual address bits 13 through
15.  I wanted to reserve PAR7 to map I/O space, so I left out bank 0 since it was one of the two already tested.&lt;/p&gt;
&lt;style&gt;
.memlist { display: inline; border-collapse: collapse; margin-right: 1em; }
.memlist caption { font-weight: bold; }
.memlist tr:nth-child(even) { background-color: #f2f2f2; }
.memlist th, .memlist td { padding: 5px; }
.memlist td { border: 1px solid lightgray; font-family: Menlo,Consolas,monospace; }
&lt;/style&gt;

&lt;table class="memlist"&gt;
&lt;caption&gt;Kernel I PAR&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;772340&lt;/td&gt;&lt;td&gt;001000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772342&lt;/td&gt;&lt;td&gt;002000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772344&lt;/td&gt;&lt;td&gt;003000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772346&lt;/td&gt;&lt;td&gt;004000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772350&lt;/td&gt;&lt;td&gt;005000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772352&lt;/td&gt;&lt;td&gt;006000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772354&lt;/td&gt;&lt;td&gt;007000&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772356&lt;/td&gt;&lt;td&gt;007600&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;table class="memlist"&gt;
&lt;caption&gt;Kernel I PDR&lt;/caption&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;772300&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772302&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772304&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772306&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772310&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772312&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772314&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;772316&lt;/td&gt;&lt;td&gt;077406&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This worked as expected according to panel PROG PHY and the logic analyzer, so the KT11 option which I had not
previously tested is at least working for kernel I space.  Tested each bank on the MS11 from the front panel using this
setup, and uncovered that bank 4 bit 10 also has a stuck on condition.  Since bank 1 is working now, I can use that
as work space for the time being in order to continue the CPU debug while awaiting some replacement DRAM chips in the
mail.&lt;/p&gt;
&lt;p&gt;Pics here of the logic analyzer setup, and captured traces of a write and subsequent read to one of the misbehaving
chips:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/ms11-debug.jpg"&gt;&lt;img src='/images/pdp11/ms11-debug_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/bad-dram-write.jpg"&gt;&lt;img src='/images/pdp11/bad-dram-write_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/bad-dram-read.jpg"&gt;&lt;img src='/images/pdp11/bad-dram-read_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 18 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-18:/ms11-debug.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: MS11-L and CPU debug IV</title><link>http://fritzm.github.io/cpu-debug-4.html</link><description>&lt;p&gt;Made some progress on the inverted result after register-to-register move problem: with the help of the KM11, extender
card, and a logic probe I was able to track down that signal ALUM L coming onto the DAP is not asserted when it should
be for a MOV instruction.  This means the ALU is performing in arithmetic instead of logic mode and thus the incorrect
result.&lt;/p&gt;
&lt;p&gt;I next moved the extender card over to GRA, where this signal originates from a subsidiary ROM, but unfortunately at
that point the MS11-L memory behavior got even worse, putting and end to these experiments.  So I'll have to tackle
that first...&lt;/p&gt;
&lt;p&gt;Moved the MR11 ROM over to the expansion backplane where the MS11-L resides, and it works fine there.  So it doesn't
seem to be a bus wiring or jumper problem onto the expansion backplane.  Checked the power input pins on the backplane
behind the MS11-L.  5V was a little low there; trimmed this up.  Probably need to clean or replace the Molex contacts
on the power distribution board in the cabinet, as it seems a few mV are being shed there needlessly compared to the
output of the same regulator on the main backplane, but things seem within stated tolerances for now.&lt;/p&gt;
&lt;p&gt;The -15V input to the MS11-L was missing entirely.  Removed the DD11 expansion backplane, and added jumpers between
the battery backup supply inputs and the corresponding main supply inputs, per documentation.  Now have -15 to the
MS11-L, but still no joy.&lt;/p&gt;
&lt;p&gt;Will need to go deeper into the MS11-L next time...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 12 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-12:/cpu-debug-4.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: KM11 replica and CPU debug III</title><link>http://fritzm.github.io/cpu-debug-3.html</link><description>&lt;p&gt;Received the boards and components for the KM11 replica; stuffed and soldered, and it appears to work!  There are
some photos below.  I can easily single-step microcode, clock states, and bus cycles now, which should really help
with the CPU debug.&lt;/p&gt;
&lt;p&gt;Swapped DAP for a spare, and this has fixed the stuck PC issue.  Memory issues remain, but by choosing a working
memory range, I can start to toggle in and attempt to execute very simple programs.&lt;/p&gt;
&lt;p&gt;The simplest possible program, unconditional branch to self, seems to execute correctly:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;001000 000777         BR      .-0
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;A register to register data move test does not however:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;001000 010203         MOV     R2,R3
001002 000776         BR      .-2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Control flow is as expected, but the value that ends up in R3 seems to be negated.  Still, pretty good progress!
Now that I can step machine states, the next step will be to put the DAP out on an extender card and start tracking
down signals with a logic probe.&lt;/p&gt;
&lt;p&gt;The HP1662A logic analyzer from eBay has also arrived; should come in handy in investigating the memory issue.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/km11.jpg"&gt;&lt;img src='/images/pdp11/km11_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/km11-action.jpg"&gt;&lt;img src='/images/pdp11/km11-action_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 11 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-11:/cpu-debug-3.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: CPU debug II</title><link>http://fritzm.github.io/cpu-debug-2.html</link><description>&lt;p&gt;Received and installed the replacement lamps for the -15V regulators.  Pic below shows what the power supply looks
like with all the lamps functioning.&lt;/p&gt;
&lt;p&gt;Verified backplane DC voltages and ripple currents again, and re-trimmed all the DC regulators.  Verified AC LO and
DC LO de-asserted and free of glitches.  Found some harness wiring mistakes to the DD11 expansion backplane; corrected these.&lt;/p&gt;
&lt;p&gt;Tried some CPU board-swaps looking for a quick win, but broken console behavior didn't change significantly with
different boards.&lt;/p&gt;
&lt;p&gt;Investigated the timing generator board, and found that the crystal oscillator wasn't oscillating.  Tracked this down
to inductor L1 which looked as if it had been partially sheared away from the board at some point during installation/removal/storage.  Repaired this.  Success!  Able to load addresses from the front console now. Switches are mirrored
in the BR when halted in console.&lt;/p&gt;
&lt;p&gt;Address bit 0 seems stuck.  Swapped PDR from spare board back to the original.  Can now examine and modify the
light/switch register, and examine the contents of the MR11 ROM.&lt;/p&gt;
&lt;p&gt;Jumpered the DD11 expansion backplane back in, and slotted in the MS11-L memory.  Limited success: can modify and
examine memory for example near address 001000, but cannot modify low memory addresses.  In some ranges, can only
modify every other word.  Also, PC seems stuck at 022000.&lt;/p&gt;
&lt;p&gt;At this point, I could really use a KM11 maintenance board set.  These are pretty hard to get a hold of, but a few
folks on the web have built their own reproductions.  I put in a PCB order to ExpressPCB with a KM11 layout by Tom
Uban (described &lt;a href="http://www.ubanproductions.com/museum.html"&gt;here&lt;/a&gt;), and also put parts on order to stuff it.&lt;/p&gt;
&lt;p&gt;Also, figuring I'll need to be going deeper into the CPU debug, I found and bought an
&lt;a href="http://www.ebay.com/itm/142004889393"&gt;HP1662A logic analyzer&lt;/a&gt; on eBay, for about the same money as the KM11 PCB and
parts!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/power-lights.jpg"&gt;&lt;img src='/images/pdp11/power-lights_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 05 Jun 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-06-05:/cpu-debug-2.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Power fixes and CPU debug</title><link>http://fritzm.github.io/power-fixes.html</link><description>&lt;p&gt;Connected up the aforementioned red wire hack to the new power harness, and verified +5V to slots 10 through 15.
Console is no longer all address and data lights on, but basic console load address / examine / deposit operations are
still not working.  A random assortment of address lines seem stuck, different on each power cycle.  About the only
thing that reliably functions from the console is loading the two highest address bits from the switches, immediately
after a reset.  Pulled the floating point unit, un-jumpered the DD11 expansion backplane, and removed all peripherals
except the MR11 diode ROM; same (broken) behavior...&lt;/p&gt;
&lt;p&gt;Scoped all the DC voltages, and did not notice any glitches.  Pulled the H742s for some bench work: verified AC LO and
DC LO signaling on both units, replaced a broken Mate-n-Lok connector on one of the units, blew out dust from all the 5V
regulators and replaced their indicator bulbs with modern equivalent (CM7381). Sourced and put on order a modern
equivalent (OL-6003BP) for the indicator bulbs on the -15V regulators.&lt;/p&gt;
&lt;p&gt;Next steps will be to verify various Unibus signals on the backplane, then maybe play some swap games with CPU card
spares to see if I can get closer to a working console as a starting point.  All I have time for this weekend, though;
sorry nothing new to see so no new pictures this time!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Mon, 30 May 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-05-30:/power-fixes.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Initial Power On!</title><link>http://fritzm.github.io/initial-power-on.html</link><description>&lt;p&gt;Beeped out the new harness to check for shorts or incorrect pins, then plugged in just the H742s and fired it up.  All
the DC regulator modules seem to be working, and I was able to trim them up to nominal voltages at the CPU end of the
harness.  The indicator lamps on all but one of the DC regulators seem to be burned out, though, so I put some new lamps
on order (at last for the +5V regulators; a modern equivalent for the -15V regulators is tougher to find).&lt;/p&gt;
&lt;p&gt;Given that success, I plugged in the CPU side of the harness, took a deep breath, and powered on!  Hmmm.  No detonations
or smoke, but all data/address/mode lights lit (see below), which is not right...  Front panel lamp test and data
address mode switches and indicators are working though at least.&lt;/p&gt;
&lt;p&gt;Some investigation on the backplane turned up no +5V to slots 10 though 15, which could be part of the problem.  Ah,
that's what the mysterious clipped red wire soldered to the backplane might have been about (visible in the top right
&lt;a href="http://fritzm.github.io/images/pdp11/kb11a-backplane.jpg"&gt;here&lt;/a&gt;...)  Sure enough, some inspection shows the corresponding trace on
the backplane looks burnt!  I could hack this red wire into my new harness I guess, but I'd rather remove it and try to
repair the board trace with a shunt.  So the backplane will have to come out.  I guess that's what I get for not
investigating the weird red wire and for not beeping out the power distribution on the backplane before mounting
and populating it...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/initial-power-on.jpg"&gt;&lt;img src='/images/pdp11/initial-power-on_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 08 May 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-05-08:/initial-power-on.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Power Harness, continued</title><link>http://fritzm.github.io/power-harness-2.html</link><description>&lt;p&gt;Moved the power modules and partial harness back over to the racks today, got everything remounted, finished and
dressed the backplane terminations, and completed the inter-H742 connections.&lt;/p&gt;
&lt;p&gt;I did not do the runs for the backplane memory to the lower H742, as I do not have any backplane memory.  I probably
won't ever have any, either: these memory options are specialized to the 11/45, are quite rare, and only cover part of
the available address space.  Additionally, they would require me to track down the details of a backplane ECO to do
the corresponding parts of the harness correctly.  The core and MOS memory that I do actually have are all system-unit
options anyway.&lt;/p&gt;
&lt;p&gt;Here are some pics of the in-rack wiring in progress, and a couple views of the finished harness.  If you add up
the capacity of the DC modules, you'll see that an 11/45 like mine (with floating point) is provisioned with +5V at 100
[sic] amps, and -15V at 20 amps.  That's no joke of a power supply...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/harness-progress.jpg"&gt;&lt;img src='/images/pdp11/harness-progress_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/harness-complete.jpg"&gt;&lt;img src='/images/pdp11/harness-complete_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/power-supplies.jpg"&gt;&lt;img src='/images/pdp11/power-supplies_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 23 Apr 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-04-23:/power-harness-2.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Power Harness</title><link>http://fritzm.github.io/power-harness.html</link><description>&lt;p&gt;The main bit I'm missing from the 11/45 is the power distribution harness; somewhere over the years this was
misplaced, or maybe I accidentally gave it away along with some excess 11/40 parts.  In any case, I haven't had any
luck tracking one of these down (made extra difficult by the fact that my 11/45 is an early model which requires a
slightly different harness than more recent models), so I'll have to build one myself from scratch.&lt;/p&gt;
&lt;p&gt;Luckily the required harness is pretty well documented in the engineering print sets.  The crimp pins are standard
Mate-n-Lok still in production.  Some of the connectors are out of production, but they haven't been too hard to
track down.&lt;/p&gt;
&lt;p&gt;Here are some pictures of the amassed wire of appropriate guages and colors, connectors, crimp pins, and the start of
the harness build on the bench:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/harness-parts.jpg"&gt;&lt;img src='/images/pdp11/harness-parts_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/harness-bench.jpg"&gt;&lt;img src='/images/pdp11/harness-bench_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 17 Apr 2016 00:00:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-04-17:/power-harness.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Some parts from eBay</title><link>http://fritzm.github.io/ebay-parts.html</link><description>&lt;p&gt;I've been keeping an eye on eBay and have collected a few more goodies: a DD11-D nine-slot expansion backplane, a fully
populated (128K x 18bit) MS11-L MOS memory board, and a couple of replacement BC08-R cables for connecting the console
to the CPU cards.  The MS11-L is a bit of a luxury; I am figuring it will be easier to deal with during bringup than
the core memory systems I have on hand.  It will also be nice to run with a full address space.&lt;/p&gt;
&lt;p&gt;Below is an updated shot of the CPU chassis with the expansion backplane installed, populated with bus jumpers,
terminators, grant continuity cards, the MS11-L memory, a DL11 serial interface, and an MR11-DB boostrap ROM.  I've gone
ahead and slotted in the FPU in the first four slots, since the cleaned and refurbished CPU cabinet is probably the
safest place to store them now.  Console cables are also installed:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/boards-in-chassis-2.jpg"&gt;&lt;img src='/images/pdp11/boards-in-chassis-2_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The MR11 ROM is an interesting bit, and probably worth a comment.  This is a 32-word diode-matrix ROM card.  The bits
are physically laid out on the card (see pictures below); where there is a diode, there is a logical 1 bit and where
there is the absence of a diode there is a logical 0 bit.  Typically the matrix would be loaded with a bootstrap program,
to save the operator from having to toggle it in from the console on each boot.&lt;/p&gt;
&lt;p&gt;The program could be modified by physically adding or removing diodes in the matrix.  My card has had such a mod; there
is a handwritten note attached from some engineer describing this.  The mod customizes the bootstrap to always load
from an RK disk unit, to avoid having to toggle in the device address at boot.  I will probably revert this mod because
I like having things in fairly stock/usual condition.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/mr11-with-note.jpg"&gt;&lt;img src='/images/pdp11/mr11-with-note_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/mr11-bare.jpg"&gt;&lt;img src='/images/pdp11/mr11-bare_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For fun, here's the source listing of the stock bootstrap.  You can match the octal digits of the machine code against
the diodes in the ROM above (low word addresses at the top of the matrix, and least-significant-bits on the left).&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;173100&lt;/span&gt; &lt;span class="nt"&gt;013701&lt;/span&gt;         &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177570&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R1&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;READ&lt;/span&gt; &lt;span class="nt"&gt;SWITCH&lt;/span&gt; &lt;span class="nt"&gt;REG&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="o"&gt;....&lt;/span&gt;
       &lt;span class="nt"&gt;177570&lt;/span&gt;
&lt;span class="nt"&gt;173104&lt;/span&gt; &lt;span class="nt"&gt;000005&lt;/span&gt; &lt;span class="nt"&gt;BEGIN&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;RESET&lt;/span&gt;                   &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FORCE&lt;/span&gt; &lt;span class="nt"&gt;CLEAR&lt;/span&gt; &lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;RETRY&lt;/span&gt;
&lt;span class="nt"&gt;173106&lt;/span&gt; &lt;span class="nt"&gt;010100&lt;/span&gt;         &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="nt"&gt;R1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;           &lt;span class="o"&gt;;...&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;DEVICE&lt;/span&gt; &lt;span class="nt"&gt;WC&lt;/span&gt; &lt;span class="nt"&gt;ADDRESS&lt;/span&gt;
&lt;span class="nt"&gt;173110&lt;/span&gt; &lt;span class="nt"&gt;012710&lt;/span&gt;         &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;-256&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;       &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;SET&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;READ&lt;/span&gt; &lt;span class="nt"&gt;256&lt;/span&gt; &lt;span class="nt"&gt;WORDS&lt;/span&gt;
       &lt;span class="nt"&gt;177400&lt;/span&gt;
&lt;span class="nt"&gt;173114&lt;/span&gt; &lt;span class="nt"&gt;020027&lt;/span&gt;         &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;177344&lt;/span&gt;      &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IS&lt;/span&gt; &lt;span class="nt"&gt;IT&lt;/span&gt; &lt;span class="nt"&gt;DECTAPE&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
       &lt;span class="nt"&gt;177344&lt;/span&gt;
&lt;span class="nt"&gt;173120&lt;/span&gt; &lt;span class="nt"&gt;001007&lt;/span&gt;         &lt;span class="nt"&gt;BNE&lt;/span&gt;     &lt;span class="nt"&gt;START&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;NO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;GO&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;START&lt;/span&gt;
&lt;span class="nt"&gt;173122&lt;/span&gt; &lt;span class="nt"&gt;012740&lt;/span&gt;         &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;4002&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;YES&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;MOVE&lt;/span&gt; &lt;span class="nt"&gt;TAPE&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;FRONT&lt;/span&gt;
       &lt;span class="nt"&gt;004002&lt;/span&gt;
&lt;span class="nt"&gt;173126&lt;/span&gt; &lt;span class="nt"&gt;005710&lt;/span&gt;         &lt;span class="nt"&gt;TST&lt;/span&gt;     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="nt"&gt;173130&lt;/span&gt; &lt;span class="nt"&gt;100376&lt;/span&gt;         &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;
&lt;span class="nt"&gt;173132&lt;/span&gt; &lt;span class="nt"&gt;005740&lt;/span&gt;         &lt;span class="nt"&gt;TST&lt;/span&gt;     &lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IS&lt;/span&gt; &lt;span class="nt"&gt;IT&lt;/span&gt; &lt;span class="nt"&gt;ENDZONE&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="nt"&gt;173134&lt;/span&gt; &lt;span class="nt"&gt;100363&lt;/span&gt;         &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="nt"&gt;BEGIN&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;NO&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="nt"&gt;TRY&lt;/span&gt; &lt;span class="nt"&gt;AGAIN&lt;/span&gt;
&lt;span class="nt"&gt;173136&lt;/span&gt; &lt;span class="nt"&gt;022020&lt;/span&gt;         &lt;span class="nt"&gt;CMP&lt;/span&gt;     &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)+,(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)+&lt;/span&gt;     &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ADJUST&lt;/span&gt; &lt;span class="nt"&gt;POINTER&lt;/span&gt;
&lt;span class="nt"&gt;173140&lt;/span&gt; &lt;span class="nt"&gt;012740&lt;/span&gt; &lt;span class="nt"&gt;START&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;  &lt;span class="nt"&gt;MOV&lt;/span&gt;     &lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;5&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;-&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;R0&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;        &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;NOW&lt;/span&gt; &lt;span class="nt"&gt;START&lt;/span&gt; &lt;span class="nt"&gt;ACTUAL&lt;/span&gt; &lt;span class="nt"&gt;READ&lt;/span&gt;
       &lt;span class="nt"&gt;000005&lt;/span&gt;
&lt;span class="nt"&gt;173144&lt;/span&gt; &lt;span class="nt"&gt;105710&lt;/span&gt;         &lt;span class="nt"&gt;TSTB&lt;/span&gt;    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;WAIT&lt;/span&gt; &lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;DONE&lt;/span&gt;
&lt;span class="nt"&gt;173146&lt;/span&gt; &lt;span class="nt"&gt;100376&lt;/span&gt;         &lt;span class="nt"&gt;BPL&lt;/span&gt;     &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;-2&lt;/span&gt;
&lt;span class="nt"&gt;173150&lt;/span&gt; &lt;span class="nt"&gt;005710&lt;/span&gt;         &lt;span class="nt"&gt;TST&lt;/span&gt;     &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;ERROR&lt;/span&gt; &lt;span class="nt"&gt;ENCOUNTERED&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;
&lt;span class="nt"&gt;173152&lt;/span&gt; &lt;span class="nt"&gt;100754&lt;/span&gt;         &lt;span class="nt"&gt;BMI&lt;/span&gt;     &lt;span class="nt"&gt;BEGIN&lt;/span&gt;           &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;IF&lt;/span&gt; &lt;span class="nt"&gt;SO&lt;/span&gt; &lt;span class="nt"&gt;START&lt;/span&gt; &lt;span class="nt"&gt;OVER&lt;/span&gt;
&lt;span class="nt"&gt;173154&lt;/span&gt; &lt;span class="nt"&gt;105010&lt;/span&gt;         &lt;span class="nt"&gt;CLRB&lt;/span&gt;    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="k"&gt;R0&lt;/span&gt;             &lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;FOR&lt;/span&gt; &lt;span class="nt"&gt;DECTAPE&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nt"&gt;STOP&lt;/span&gt; &lt;span class="nt"&gt;TRANSPORT&lt;/span&gt;
&lt;span class="nt"&gt;173156&lt;/span&gt; &lt;span class="nt"&gt;000137&lt;/span&gt;         &lt;span class="nt"&gt;JMP&lt;/span&gt;     &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;0&lt;/span&gt;             &lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="nt"&gt;GO&lt;/span&gt; &lt;span class="nt"&gt;TO&lt;/span&gt; &lt;span class="nt"&gt;ROUTINE&lt;/span&gt; &lt;span class="nt"&gt;LOADED&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Hmmm, the Pygments syntax highlighting package used by my blog generator doesn't seem to grok MACRO-11; may have to
do something about that...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 09 Apr 2016 11:25:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-04-09:/ebay-parts.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: VT52</title><link>http://fritzm.github.io/vt52.html</link><description>&lt;p&gt;Spend some time reviving a VT52 that I intend to use with the PDP-11.  This was a pretty nice eBay find.  There was some
oxidation and flakiness with the connectors to the chargen ROM daughter card (I remember this being typical
of VT52s even back in the day).  A little more difficult to track down were some flaky solder joints around the clock
chip.  But, everything else seems to be in pretty good shape and its working well now!  Here it is hooked up to a linux
VM on my macbook, compiling some LSST code to generate some output as a test drive:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/vt52.jpg"&gt;&lt;img src='/images/pdp11/vt52_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Man, seeing that funky font again, with its non-descending-descenders, is really great!  Surprisingly, it doesn't seem
to be available in digital format anywhere, unlike the later VT100 fonts, etc.  Try as I might, I couldn't seem to find
the chargen ROM listing in any of the DEC documentation archives, either.&lt;/p&gt;
&lt;p&gt;Well, I do have a Digilent FPGA eval card and some level conversion chips laying around, so as a holiday hack project
I put together a quick ROM scanner in Verlog, interfaced it to the VT52 chargen on a breadboard, and scanned out the
contents.  Here's a picture of the scanner in action, and the produced output:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/rom-scanner.jpg"&gt;&lt;img src='/images/pdp11/rom-scanner_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The yellow-ish board on the right is the VT52 chargen.  The Verilog source for the scanner, the scanned data, and some
preliminary attempts to convert the data to a few modern font formats are available on my github over at
&lt;a href="https://github.com/fritzm/vt52"&gt;https://github.com/fritzm/vt52&lt;/a&gt;.  I need to learn some more about font formats to make some better font files; if I do
I will update that repo.  Any help from fontophiles gladly accepted!&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 03 Jan 2016 20:17:00 -0800</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2016-01-03:/vt52.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: CPU Backplane and logic</title><link>http://fritzm.github.io/backplane-and-logic.html</link><description>&lt;p&gt;Mounted the CPU backplane, and slotted in the CPU and MMU logic cards.  The empty slots on the right are for the FPU -- I have those on hand but figure I'll wait to slot them until I've got the basic CPU up and running.&lt;/p&gt;
&lt;p&gt;One kind of interesting thing: the logic boards were stored vertically for several decades, and on some of the cards with plastic ribbon-cable connectors the plastic seems to have flaked and shed and fallen down the boards.  The flakey substance then grew some impressive crystals between some of the solder traces.  Scrubbed these out with some anhydrous IPA.&lt;/p&gt;
&lt;p&gt;A tip copied from a fellow restorer: Alconox detergent for removing grime from various plastic components.  Parts soaked overnight come out looking nearly new (here you can see the cleaned plastic card guides).&lt;/p&gt;
&lt;p&gt;Also pictured here are the characteristic bloody knuckles that are obtained whenever wrestling with PDP backplanes, logic cards, and terminators in close confines.  That really takes you back...&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/boards-in-chassis.jpg"&gt;&lt;img src='/images/pdp11/boards-in-chassis_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/board-with-crystals.jpg"&gt;&lt;img src='/images/pdp11/board-with-crystals_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/crystals.jpg"&gt;&lt;img src='/images/pdp11/crystals_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/knuckles.jpg"&gt;&lt;img src='/images/pdp11/knuckles_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Fri, 03 Jul 2015 14:56:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-07-03:/backplane-and-logic.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: H742s and front panel</title><link>http://fritzm.github.io/panel-and-742s.html</link><description>&lt;p&gt;The H742 supplies are now back together, mounted in the cabinet, and wired through to the 861.  I've powered them up and run them for minutes at a time (without any DC regulator loads) and there have been no surprise detonations...&lt;/p&gt;
&lt;p&gt;The repainted cabinet side door has also been remounted.&lt;/p&gt;
&lt;p&gt;Spent some time on the front panel as well.  Removed the tubular lock and took a trip to the local locksmith to have a new key made up.  Replaced all the incandescent indicator lamps with the closest modern equivalent.  Panel is now remounted and it's starting to look like a real '11!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/742s-mounted.jpg"&gt;&lt;img src='/images/pdp11/742s-mounted_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/front-panel.jpg"&gt;&lt;img src='/images/pdp11/front-panel_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 21 Jun 2015 18:14:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-06-21:/panel-and-742s.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: AC power and cooling</title><link>http://fritzm.github.io/fans-and-h742s.html</link><description>&lt;p&gt;Spent a lot of time over a couple weekends cleaning and reconditioning all the muffin cooling fans for the CPU cabinet and power supplies.  As you can see in the photo below, there are a lot of these!  All reassembled now, and wired along with the back-of-cabinet power distribution board.  Also did a clean on the big box fan at the top of the rack, not seen here.&lt;/p&gt;
&lt;p&gt;I have also completely torn down the H742s to give them a thorough clean, touch up a few last corrosion spots, and replace the failing neon indicators.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/chassis-with-fans.jpg"&gt;&lt;img src='/images/pdp11/chassis-with-fans_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/742-rebuild.jpg"&gt;&lt;img src='/images/pdp11/742-rebuild_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 07 Jun 2015 14:15:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-06-07:/fans-and-h742s.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: H742 power control boards</title><link>http://fritzm.github.io/power-controllers.html</link><description>&lt;p&gt;Found a little time to clean up and go through the power control boards for the H742 supplies.  They are looking pretty good.  Even the big electrolytics seem fine on first look.  These things were built with very high quality components, and they really seem to last and last.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/pwr-ctrls.jpg"&gt;&lt;img src='/images/pdp11/pwr-ctrls_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 23 May 2015 16:30:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-05-23:/power-controllers.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Teardown and corrosion remediation</title><link>http://fritzm.github.io/corrosion.html</link><description>&lt;p&gt;Had a little more time to work on the PDP-11 this weekend.  Mostly going after some corrosion on the CPU cabinet and H742 power supplies.  Tore these down, sanded down the corroded bits, then hit with a satin finish Rustoleum rattle-can which dries to a reasonable approximation of the original powder-coat.&lt;/p&gt;
&lt;p&gt;Neon indicators on the H742s are dim and flickery, so ordered some replacements for these, too.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/h742-teardown.jpg"&gt;&lt;img src='/images/pdp11/h742-teardown_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/h742-corrosion.jpg"&gt;&lt;img src='/images/pdp11/h742-corrosion_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/cpu-cabinet.jpg"&gt;&lt;img src='/images/pdp11/cpu-cabinet_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sat, 11 Apr 2015 18:45:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-04-11:/corrosion.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: 861 AC power control</title><link>http://fritzm.github.io/861.html</link><description>&lt;p&gt;Well, might as well start at the beginning with the AC power system, so here's the 861 power control.  In very good shape for some 40 year old kit!  The neon indicator lamps have gone, so I sourced the modern equivalent and put them on order.  Everything else is tight and clean:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/861.jpg"&gt;&lt;img src='/images/pdp11/861_thumbnail_tall.jpg'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 29 Mar 2015 10:35:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-03-29:/861.html</guid><category>Retro-Computing</category><category>PDP-11</category></item><item><title>PDP-11/45: Begin Again</title><link>http://fritzm.github.io/begin-again.html</link><description>&lt;p&gt;Back in the mid/late '80s, when I was hanging around CMU, a computer club member introduced me to the club's nearly forgotten hardware lab.  It was still stuffed with remnants of the earlier time-sharing age, including two or three full-cabinet PDP-11 systems with names like "Banshee" and "Centaur".  I thought these were the coolest -- CPUs you could see inside, and hack with a soldering iron and a wire wrap gun.  Real front panels with lights and toggles, and machine language programming as a physical activity.  For a kid fascinated with computers, it was great.  You couldn't get closer to the metal; you could quite literally get your head inside these machines.&lt;/p&gt;
&lt;p&gt;I began spending off hours in the lab, puttering with the 11s and getting to know them.  Eventually, the club decided it was time to clean house and remove all of the older equipment.  Most stuff was scheduled to be hauled away to the dump, but I was welcome to anything I wanted to haul away myself in advance.  So I bothered some friends with a car, disassembled one of the 11/45s there ("Banshee" I believe) which seemed like the nicest thing, and hauled it off to my off-campus house.  There it resided in the basement with many other oddments for some years.&lt;/p&gt;
&lt;p&gt;Eventually, I ended up moving out to CA, and after some time the 11/45 CPU was disassembled and packed into moving boxes for the west coast as practically as possible, leaving all the bulkier parts behind.&lt;/p&gt;
&lt;p&gt;After a couple of years in CA, I happened on a decomissioned two-rack 11/40 system at Stanford, essentially free for the effort of hauling.  This had most of the missing cabinetry, power supplies, and peripherals needed to reconstruct the 11/45!  So I procurred this and added it to a growing west coast equipment stash.  And then real-life set in -- job changes, house moves, raising a kid...  Through all of that I held on to all the parts, vowing to "get to it someday".  I would pick through the stuff from time to time over the years, but never had the time to take the project very far.&lt;/p&gt;
&lt;p&gt;Well, now "someday" is here!  The kid is off to college and I've moved house once again, but this time I reserved some working space for the project and pulled all the parts so they are together and accessible.  So here we go...&lt;/p&gt;
&lt;p&gt;Here are a some pics from the first weekend: the two H960 racks that are the bones of the whole thing, some glamour shots of the processor backplane and the RK11-C disk controller, and my buddy Chris helping to remount the RK05 drives on their rails temporarily to keep them off the floor and out of harm's way:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://fritzm.github.io/images/pdp11/racks.jpg"&gt;&lt;img src='/images/pdp11/racks_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/kb11a-backplane.jpg"&gt;&lt;img src='/images/pdp11/kb11a-backplane_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk11c.jpg"&gt;&lt;img src='/images/pdp11/rk11c_thumbnail_tall.jpg'/&gt;&lt;/a&gt;
&lt;a href="http://fritzm.github.io/images/pdp11/rk05-help.png"&gt;&lt;img src='/images/pdp11/rk05-help_thumbnail_tall.png'/&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Fritz Mueller</dc:creator><pubDate>Sun, 15 Mar 2015 18:45:00 -0700</pubDate><guid isPermaLink="false">tag:fritzm.github.io,2015-03-15:/begin-again.html</guid><category>Retro-Computing</category><category>PDP-11</category></item></channel></rss>